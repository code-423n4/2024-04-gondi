INFO:Detectors:
PurchaseBundler.afterNFTTransfer(IMultiSourceLoan.Loan,bytes) (src/lib/callbacks/PurchaseBundler.sol#182-226) uses arbitrary from in transferFrom: _wrappedPunk.transferFrom(_loan.borrower,address(this),_loan.nftCollateralTokenId) (src/lib/callbacks/PurchaseBundler.sol#197)
PurchaseBundler.afterNFTTransfer(IMultiSourceLoan.Loan,bytes) (src/lib/callbacks/PurchaseBundler.sol#182-226) uses arbitrary from in transferFrom: collection.transferFrom(_loan.borrower,address(this),_loan.nftCollateralTokenId) (src/lib/callbacks/PurchaseBundler.sol#212)
PurchaseBundler._handleTax(IMultiSourceLoan.Loan,uint256) (src/lib/callbacks/PurchaseBundler.sol#292-315) uses arbitrary from in transferFrom: ERC20(principalAddress).safeTransferFrom(borrower,tranche.lender,taxCost - feeTax) (src/lib/callbacks/PurchaseBundler.sol#307)
PurchaseBundler._handleTax(IMultiSourceLoan.Loan,uint256) (src/lib/callbacks/PurchaseBundler.sol#292-315) uses arbitrary from in transferFrom: ERC20(principalAddress).safeTransferFrom(borrower,protocolFee.recipient,totalFeeTax) (src/lib/callbacks/PurchaseBundler.sol#313)
MultiSourceLoan.emitLoan(IMultiSourceLoan.LoanExecutionData) (src/lib/loans/MultiSourceLoan.sol#124-159) uses arbitrary from in transferFrom: ERC721(nftCollateralAddress).transferFrom(borrower,address(this),executionData.tokenId) (src/lib/loans/MultiSourceLoan.sol#153)
MultiSourceLoan.refinanceFull(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan,bytes) (src/lib/loans/MultiSourceLoan.sol#162-232) uses arbitrary from in transferFrom: ERC20(_loan.principalAddress).safeTransferFrom(_loan.borrower,_renegotiationOffer.lender,_loan.principalAmount - netNewLender) (src/lib/loans/MultiSourceLoan.sol#200-202)
MultiSourceLoan.refinanceFull(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan,bytes) (src/lib/loans/MultiSourceLoan.sol#162-232) uses arbitrary from in transferFrom: ERC20(_loan.principalAddress).safeTransferFrom(_renegotiationOffer.lender,_loan.borrower,netNewLender - _loan.principalAmount) (src/lib/loans/MultiSourceLoan.sol#204-206)
MultiSourceLoan.addNewTranche(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan,bytes) (src/lib/loans/MultiSourceLoan.sol#349-386) uses arbitrary from in transferFrom: ERC20(_loan.principalAddress).safeTransferFrom(_renegotiationOffer.lender,_loan.borrower,_renegotiationOffer.principalAmount - _renegotiationOffer.fee) (src/lib/loans/MultiSourceLoan.sol#368-370)
MultiSourceLoan.addNewTranche(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan,bytes) (src/lib/loans/MultiSourceLoan.sol#349-386) uses arbitrary from in transferFrom: ERC20(_loan.principalAddress).safeTransferFrom(_renegotiationOffer.lender,protocolFee.recipient,_renegotiationOffer.fee.mulDivUp(protocolFee.fraction,_PRECISION)) (src/lib/loans/MultiSourceLoan.sol#374-378)
MultiSourceLoan._processOldTranche(address,address,IMultiSourceLoan.Tranche,uint256,uint256) (src/lib/loans/MultiSourceLoan.sol#604-640) uses arbitrary from in transferFrom: ERC20(_principalAddress).safeTransferFrom(_lender,_tranche.lender,_tranche.principalAmount + accruedInterest - thisProtocolFee) (src/lib/loans/MultiSourceLoan.sol#636-638)
MultiSourceLoan._handleProtocolFeeForFee(address,address,uint256,address) (src/lib/loans/MultiSourceLoan.sol#680-686) uses arbitrary from in transferFrom: ERC20(_principalAddress).safeTransferFrom(_lender,_feeRecipient,_fee) (src/lib/loans/MultiSourceLoan.sol#684)
MultiSourceLoan._addTrancheFromPartial(IMultiSourceLoan.Loan,IMultiSourceLoan.RenegotiationOffer,uint256,uint256) (src/lib/loans/MultiSourceLoan.sol#708-725) uses arbitrary from in transferFrom: ERC20(_loan.principalAddress).safeTransferFrom(_renegotiationOffer.lender,_loan.borrower,delta) (src/lib/loans/MultiSourceLoan.sol#724)
MultiSourceLoan._processRepayments(IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#930-967) uses arbitrary from in transferFrom: asset.safeTransferFrom(loan.borrower,tranche.lender,repayment) (src/lib/loans/MultiSourceLoan.sol#946)
MultiSourceLoan._processRepayments(IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#930-967) uses arbitrary from in transferFrom: asset.safeTransferFrom(loan.borrower,_protocolFee.recipient,totalProtocolFee) (src/lib/loans/MultiSourceLoan.sol#964)
MultiSourceLoan._processOffersFromExecutionData(address,address,address,address,uint256,uint256,IMultiSourceLoan.OfferExecution[]) (src/lib/loans/MultiSourceLoan.sol#981-1050) uses arbitrary from in transferFrom: ERC20(offer.principalAddress).safeTransferFrom(lender,_principalReceiver,amount - fee) (src/lib/loans/MultiSourceLoan.sol#1025)
AaveUsdcBaseInterestAllocator.reallocate(uint256,uint256,bool) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#63-76) uses arbitrary from in transferFrom: ERC20(_usdc).transferFrom(pool,address(this),delta) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#67)
LidoEthBaseInterestAllocator.reallocate(uint256,uint256,bool) (src/lib/pools/LidoEthBaseInterestAllocator.sol#114-129) uses arbitrary from in transferFrom: weth.transferFrom(getPool,address(this),amount) (src/lib/pools/LidoEthBaseInterestAllocator.sol#119)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#arbitrary-from-in-transferfrom
INFO:Detectors:
PurchaseBundler.buy(bytes[]) (src/lib/callbacks/PurchaseBundler.sol#100-125) sends eth to arbitrary user
	Dangerous calls:
	- (success) = address(msg.sender).call{value: remainingBalance}() (src/lib/callbacks/PurchaseBundler.sol#118)
LidoEthBaseInterestAllocator._exchangeAndSendWeth(address,uint256,bool) (src/lib/pools/LidoEthBaseInterestAllocator.sol#152-158) sends eth to arbitrary user
	Dangerous calls:
	- weth.deposit{value: received}() (src/lib/pools/LidoEthBaseInterestAllocator.sol#156)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations
INFO:Detectors:
Pool.deployWithdrawalQueue() (src/lib/pools/Pool.sol#317-389) uses a weak PRNG: "idx = (baseIdx - i) % totalQueues (src/lib/pools/Pool.sol#361)" 
Pool._loanTermination(address,uint256,uint256,uint256,uint256,uint256) (src/lib/pools/Pool.sol#516-552) uses a weak PRNG: "idx = (pendingIndex + i) % totalQueues (src/lib/pools/Pool.sol#530)" 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#weak-PRNG
INFO:Detectors:
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#128-207) has bitwise-xor operator ^ instead of the exponentiation operator **: 
	 - inverse = (3 * denominator) ^ 2 (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#189)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-exponentiation
INFO:Detectors:
AaveUsdcBaseInterestAllocator.reallocate(uint256,uint256,bool) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#63-76) ignores return value by ERC20(_usdc).transferFrom(pool,address(this),delta) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#67)
AaveUsdcBaseInterestAllocator.reallocate(uint256,uint256,bool) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#63-76) ignores return value by ERC20(_usdc).transfer(pool,delta_scope_0) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#72)
AaveUsdcBaseInterestAllocator.transferAll() (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#78-87) ignores return value by ERC20(_usdc).transfer(pool,total) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#84)
LidoEthBaseInterestAllocator.reallocate(uint256,uint256,bool) (src/lib/pools/LidoEthBaseInterestAllocator.sol#114-129) ignores return value by weth.transferFrom(getPool,address(this),amount) (src/lib/pools/LidoEthBaseInterestAllocator.sol#119)
LidoEthBaseInterestAllocator._exchangeAndSendWeth(address,uint256,bool) (src/lib/pools/LidoEthBaseInterestAllocator.sol#152-158) ignores return value by weth.transfer(_pool,received) (src/lib/pools/LidoEthBaseInterestAllocator.sol#157)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer
INFO:Detectors:
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#128-207) performs a multiplication on the result of a division:
	- denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#174)
	- inverse = (3 * denominator) ^ 2 (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#189)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#128-207) performs a multiplication on the result of a division:
	- denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#174)
	- inverse *= 2 - denominator * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#193)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#128-207) performs a multiplication on the result of a division:
	- denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#174)
	- inverse *= 2 - denominator * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#194)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#128-207) performs a multiplication on the result of a division:
	- denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#174)
	- inverse *= 2 - denominator * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#195)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#128-207) performs a multiplication on the result of a division:
	- denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#174)
	- inverse *= 2 - denominator * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#196)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#128-207) performs a multiplication on the result of a division:
	- denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#174)
	- inverse *= 2 - denominator * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#197)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#128-207) performs a multiplication on the result of a division:
	- denominator = denominator / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#174)
	- inverse *= 2 - denominator * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#198)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#128-207) performs a multiplication on the result of a division:
	- prod0 = prod0 / twos (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#177)
	- result = prod0 * inverse (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#204)
Math.invMod(uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#227-273) performs a multiplication on the result of a division:
	- quotient = gcd / remainder (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#249)
	- (gcd,remainder) = (remainder,gcd - remainder * quotient) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#251-258)
FixedPointMathLib.rpow(uint256,uint256,uint256) (lib/solmate/src/utils/FixedPointMathLib.sol#71-158) performs a multiplication on the result of a division:
	- x = xxRound_rpow_asm_0 / scalar (lib/solmate/src/utils/FixedPointMathLib.sol#129)
	- zx_rpow_asm_0 = z * x (lib/solmate/src/utils/FixedPointMathLib.sol#134)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply
INFO:Detectors:
LidoEthBaseInterestAllocator.getBaseApr() (src/lib/pools/LidoEthBaseInterestAllocator.sol#75-89) uses a dangerous strict equality:
	- aprBps == 0 (src/lib/pools/LidoEthBaseInterestAllocator.sol#85)
LidoEthBaseInterestAllocator.getBaseAprWithUpdate() (src/lib/pools/LidoEthBaseInterestAllocator.sol#92-101) uses a dangerous strict equality:
	- lidoData.aprBps == 0 (src/lib/pools/LidoEthBaseInterestAllocator.sol#97)
Pool._outstandingApr(Pool.OutstandingValues) (src/lib/pools/Pool.sol#720-725) uses a dangerous strict equality:
	- __outstandingValues.principalAmount == 0 (src/lib/pools/Pool.sol#721)
Pool._reallocate() (src/lib/pools/Pool.sol#570-587) uses a dangerous strict equality:
	- currentBalance == 0 (src/lib/pools/Pool.sol#573)
Pool._updatePendingWithdrawalWithQueue(uint256,uint256,uint256[]) (src/lib/pools/Pool.sol#643-684) uses a dangerous strict equality:
	- totalReceived == 0 (src/lib/pools/Pool.sol#651)
Pool._updatePendingWithdrawalWithQueue(uint256,uint256,uint256[]) (src/lib/pools/Pool.sol#643-684) uses a dangerous strict equality:
	- queueAccounting.thisQueueFraction == 0 (src/lib/pools/Pool.sol#665)
ERC4626.convertToAssets(uint256) (lib/solmate/src/tokens/ERC4626.sol#130-134) uses a dangerous strict equality:
	- supply == 0 (lib/solmate/src/tokens/ERC4626.sol#133)
ERC4626.convertToShares(uint256) (lib/solmate/src/tokens/ERC4626.sol#124-128) uses a dangerous strict equality:
	- supply == 0 (lib/solmate/src/tokens/ERC4626.sol#127)
ERC4626.previewMint(uint256) (lib/solmate/src/tokens/ERC4626.sol#140-144) uses a dangerous strict equality:
	- supply == 0 (lib/solmate/src/tokens/ERC4626.sol#143)
ERC4626.previewWithdraw(uint256) (lib/solmate/src/tokens/ERC4626.sol#146-150) uses a dangerous strict equality:
	- supply == 0 (lib/solmate/src/tokens/ERC4626.sol#149)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities
INFO:Detectors:
Reentrancy in MultiSourceLoan._processOffersFromExecutionData(address,address,address,address,uint256,uint256,IMultiSourceLoan.OfferExecution[]) (src/lib/loans/MultiSourceLoan.sol#981-1050):
	External calls:
	- _validateOfferExecution(thisOfferExecution,_tokenId,offer.lender,offer.lender,thisOfferExecution.lenderOfferSignature,protocolFee.fraction,totalAmount) (src/lib/loans/MultiSourceLoan.sol#1002-1010)
		- ILoanManager(lender).validateOffer(abi.encode(_offerExecution),_feeFraction) (src/lib/loans/MultiSourceLoan.sol#760)
		- IOfferValidator(thisValidator.validator).validateOffer(_loanOffer,_tokenId,thisValidator.arguments) (src/lib/loans/MultiSourceLoan.sol#914)
	State variables written after the call(s):
	- _used[lender][offer.offerId] += amount (src/lib/loans/MultiSourceLoan.sol#1027)
	BaseLoan._used (src/lib/loans/BaseLoan.sol#49) can be used in cross function reentrancies:
	- BaseLoan.getUsedCapacity(address,uint256) (src/lib/loans/BaseLoan.sol#190-192)
	- isOfferCancelled[lender][offer.offerId] = true (src/lib/loans/MultiSourceLoan.sol#1029)
	BaseLoan.isOfferCancelled (src/lib/loans/BaseLoan.sol#52) can be used in cross function reentrancies:
	- BaseLoan.cancelOffer(uint256) (src/lib/loans/BaseLoan.sol#159-164)
	- BaseLoan.isOfferCancelled (src/lib/loans/BaseLoan.sol#52)
Reentrancy in UserVault._withdrawERC721(uint256,address,uint256) (src/lib/UserVault.sol#317-329):
	External calls:
	- ERC721(_collection).transferFrom(address(this),msg.sender,_tokenId) (src/lib/UserVault.sol#324)
	State variables written after the call(s):
	- delete _vaultERC721s[_collection][_tokenId] (src/lib/UserVault.sol#326)
	UserVault._vaultERC721s (src/lib/UserVault.sol#28) can be used in cross function reentrancies:
	- UserVault.ERC721OwnerOf(address,uint256) (src/lib/UserVault.sol#147-149)
	- UserVault._depositERC721(address,uint256,address,uint256) (src/lib/UserVault.sol#285-291)
	- UserVault._withdrawERC721(uint256,address,uint256) (src/lib/UserVault.sol#317-329)
Reentrancy in UserVault._withdrawOldERC721(uint256,address,uint256) (src/lib/UserVault.sol#331-343):
	External calls:
	- IOldERC721(_collection).transfer(msg.sender,_tokenId) (src/lib/UserVault.sol#338)
	State variables written after the call(s):
	- delete _vaultOldERC721s[_collection][_tokenId] (src/lib/UserVault.sol#340)
	UserVault._vaultOldERC721s (src/lib/UserVault.sol#31) can be used in cross function reentrancies:
	- UserVault.OldERC721OwnerOf(address,uint256) (src/lib/UserVault.sol#151-153)
	- UserVault._depositOldERC721(address,uint256,address,uint256) (src/lib/UserVault.sol#293-302)
	- UserVault._withdrawOldERC721(uint256,address,uint256) (src/lib/UserVault.sol#331-343)
Reentrancy in Pool.confirmBaseInterestAllocator(address) (src/lib/pools/Pool.sol#202-221):
	External calls:
	- IBaseInterestAllocator(cachedAllocator).transferAll() (src/lib/pools/Pool.sol#211)
	- asset.approve(cachedAllocator,0) (src/lib/pools/Pool.sol#212)
	- asset.approve(_newBaseInterestAllocator,type()(uint256).max) (src/lib/pools/Pool.sol#214)
	State variables written after the call(s):
	- getBaseInterestAllocator = _newBaseInterestAllocator (src/lib/pools/Pool.sol#216)
	Pool.getBaseInterestAllocator (src/lib/pools/Pool.sol#90) can be used in cross function reentrancies:
	- Pool._getUndeployedAssets() (src/lib/pools/Pool.sol#563-566)
	- Pool.confirmBaseInterestAllocator(address) (src/lib/pools/Pool.sol#202-221)
	- Pool.getBaseInterestAllocator (src/lib/pools/Pool.sol#90)
	- Pool.validateOffer(bytes,uint256) (src/lib/pools/Pool.sol#392-416)
	- getPendingBaseInterestAllocator = address(0) (src/lib/pools/Pool.sol#217)
	Pool.getPendingBaseInterestAllocator (src/lib/pools/Pool.sol#88) can be used in cross function reentrancies:
	- Pool.confirmBaseInterestAllocator(address) (src/lib/pools/Pool.sol#202-221)
	- Pool.getPendingBaseInterestAllocator (src/lib/pools/Pool.sol#88)
	- Pool.setBaseInterestAllocator(address) (src/lib/pools/Pool.sol#192-199)
	- getPendingBaseInterestAllocatorSetTime = type()(uint256).max (src/lib/pools/Pool.sol#218)
	Pool.getPendingBaseInterestAllocatorSetTime (src/lib/pools/Pool.sol#92) can be used in cross function reentrancies:
	- Pool.confirmBaseInterestAllocator(address) (src/lib/pools/Pool.sol#202-221)
	- Pool.constructor(address,address,uint256,IPool.OptimalIdleRange,uint256,uint256,ERC20,string,string) (src/lib/pools/Pool.sol#137-174)
	- Pool.getPendingBaseInterestAllocatorSetTime (src/lib/pools/Pool.sol#92)
	- Pool.setBaseInterestAllocator(address) (src/lib/pools/Pool.sol#192-199)
Reentrancy in Pool.deployWithdrawalQueue() (src/lib/pools/Pool.sol#317-389):
	External calls:
	- _queueClaimAll(proRataLiquid + getAvailableToWithdraw,pendingQueueIndex) (src/lib/pools/Pool.sol#347)
		- IBaseInterestAllocator(getBaseInterestAllocator).reallocate(currentBalance,_withdrawn + targetIdle,true) (src/lib/pools/Pool.sol#600)
	State variables written after the call(s):
	- _deployedQueues[lastQueueIndex] = _deployQueue(asset) (src/lib/pools/Pool.sol#352)
	Pool._deployedQueues (src/lib/pools/Pool.sol#105) can be used in cross function reentrancies:
	- Pool._withdraw(address,address,uint256,uint256) (src/lib/pools/Pool.sol#757-765)
	- Pool.constructor(address,address,uint256,IPool.OptimalIdleRange,uint256,uint256,ERC20,string,string) (src/lib/pools/Pool.sol#137-174)
	- Pool.getDeployedQueue(uint256) (src/lib/pools/Pool.sol#250-252)
	- _pendingQueueIndex = lastQueueIndex (src/lib/pools/Pool.sol#383)
	Pool._pendingQueueIndex (src/lib/pools/Pool.sol#109) can be used in cross function reentrancies:
	- Pool._getTotalOutstandingValue() (src/lib/pools/Pool.sol#468-484)
	- Pool._loanTermination(address,uint256,uint256,uint256,uint256,uint256) (src/lib/pools/Pool.sol#516-552)
	- Pool._withdraw(address,address,uint256,uint256) (src/lib/pools/Pool.sol#757-765)
	- Pool.constructor(address,address,uint256,IPool.OptimalIdleRange,uint256,uint256,ERC20,string,string) (src/lib/pools/Pool.sol#137-174)
	- Pool.getPendingQueueIndex() (src/lib/pools/Pool.sol#262-264)
	- i < totalQueues - 1 (src/lib/pools/Pool.sol#360)
	Pool._queueAccounting (src/lib/pools/Pool.sol#113) can be used in cross function reentrancies:
	- Pool._getTotalOutstandingValue() (src/lib/pools/Pool.sol#468-484)
	- Pool._loanTermination(address,uint256,uint256,uint256,uint256,uint256) (src/lib/pools/Pool.sol#516-552)
	- Pool.constructor(address,address,uint256,IPool.OptimalIdleRange,uint256,uint256,ERC20,string,string) (src/lib/pools/Pool.sol#137-174)
	- Pool.getAccountingValuesForQueue(uint256) (src/lib/pools/Pool.sol#269-271)
	- _queueAccounting[idx].netPoolFraction -= newQueueFraction (src/lib/pools/Pool.sol#368)
	Pool._queueAccounting (src/lib/pools/Pool.sol#113) can be used in cross function reentrancies:
	- Pool._getTotalOutstandingValue() (src/lib/pools/Pool.sol#468-484)
	- Pool._loanTermination(address,uint256,uint256,uint256,uint256,uint256) (src/lib/pools/Pool.sol#516-552)
	- Pool.constructor(address,address,uint256,IPool.OptimalIdleRange,uint256,uint256,ERC20,string,string) (src/lib/pools/Pool.sol#137-174)
	- Pool.getAccountingValuesForQueue(uint256) (src/lib/pools/Pool.sol#269-271)
	- totalSupply -= sharesPendingWithdrawal (src/lib/pools/Pool.sol#387)
	ERC20.totalSupply (lib/solmate/src/tokens/ERC20.sol#31) can be used in cross function reentrancies:
	- ERC20._mint(address,uint256) (lib/solmate/src/tokens/ERC20.sol#183-193)
	- ERC4626.convertToAssets(uint256) (lib/solmate/src/tokens/ERC4626.sol#130-134)
	- ERC4626.convertToShares(uint256) (lib/solmate/src/tokens/ERC4626.sol#124-128)
	- ERC4626.previewMint(uint256) (lib/solmate/src/tokens/ERC4626.sol#140-144)
	- ERC4626.previewWithdraw(uint256) (lib/solmate/src/tokens/ERC4626.sol#146-150)
	- ERC20.totalSupply (lib/solmate/src/tokens/ERC20.sol#31)
Reentrancy in MultiSourceLoan.liquidateLoan(uint256,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#437-453):
	External calls:
	- (liquidated,liquidation) = _liquidateLoan(_loanId,_loan,_loan.tranche.length == 1 && ! getLoanManagerRegistry.isLoanManager(_loan.tranche[0].lender)) (src/lib/loans/MultiSourceLoan.sol#446-448)
		- ERC721(_loan.nftCollateralAddress).transferFrom(address(this),_loan.tranche[0].lender,_loan.nftCollateralTokenId) (src/lib/LiquidationHandler.sol#95-97)
		- ERC721(_loan.nftCollateralAddress).transferFrom(address(this),_loanLiquidator,_loan.nftCollateralTokenId) (src/lib/LiquidationHandler.sol#102)
		- liquidation = ILoanLiquidator(_loanLiquidator).liquidateLoan(_loanId,_loan.nftCollateralAddress,_loan.nftCollateralTokenId,_loan.principalAddress,_liquidationAuctionDuration,msg.sender) (src/lib/LiquidationHandler.sol#103-110)
	State variables written after the call(s):
	- delete _loans[_loanId] (src/lib/loans/MultiSourceLoan.sol#450)
	MultiSourceLoan._loans (src/lib/loans/MultiSourceLoan.sol#45) can be used in cross function reentrancies:
	- MultiSourceLoan._baseLoanChecks(uint256,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#645-652)
	- MultiSourceLoan.delegate(uint256,IMultiSourceLoan.Loan,address,bytes32,bool) (src/lib/loans/MultiSourceLoan.sol#468-480)
	- MultiSourceLoan.getLoanHash(uint256) (src/lib/loans/MultiSourceLoan.sol#513-515)
	- MultiSourceLoan.loanLiquidated(uint256,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#456-465)
	- MultiSourceLoan.mergeTranches(uint256,IMultiSourceLoan.Loan,uint256,uint256) (src/lib/loans/MultiSourceLoan.sol#389-402)
	- MultiSourceLoan.refinancePartial(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#235-303)
Reentrancy in MultiSourceLoan.refinanceFromLoanExecutionData(uint256,IMultiSourceLoan.Loan,IMultiSourceLoan.LoanExecutionData) (src/lib/loans/MultiSourceLoan.sol#306-346):
	External calls:
	- (newLoanId,offerIds,loan,totalFee) = _processOffersFromExecutionData(borrower,executionData.principalReceiver,principalAddress,nftCollateralAddress,executionData.tokenId,executionData.duration,offerExecution) (src/lib/loans/MultiSourceLoan.sol#328-337)
		- ILoanManager(lender).validateOffer(abi.encode(_offerExecution),_feeFraction) (src/lib/loans/MultiSourceLoan.sol#760)
		- IOfferValidator(thisValidator.validator).validateOffer(_loanOffer,_tokenId,thisValidator.arguments) (src/lib/loans/MultiSourceLoan.sol#914)
	- _processRepayments(_loan) (src/lib/loans/MultiSourceLoan.sol#338)
		- ILoanManager(tranche.lender).loanRepayment(tranche.loanId,tranche.principalAmount,tranche.aprBps,tranche.accruedInterest,loan.protocolFee,tranche.startTime) (src/lib/loans/MultiSourceLoan.sol#949-956)
	State variables written after the call(s):
	- _loans[newLoanId] = loan.hash() (src/lib/loans/MultiSourceLoan.sol#342)
	MultiSourceLoan._loans (src/lib/loans/MultiSourceLoan.sol#45) can be used in cross function reentrancies:
	- MultiSourceLoan._baseLoanChecks(uint256,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#645-652)
	- MultiSourceLoan.delegate(uint256,IMultiSourceLoan.Loan,address,bytes32,bool) (src/lib/loans/MultiSourceLoan.sol#468-480)
	- MultiSourceLoan.getLoanHash(uint256) (src/lib/loans/MultiSourceLoan.sol#513-515)
	- MultiSourceLoan.loanLiquidated(uint256,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#456-465)
	- MultiSourceLoan.mergeTranches(uint256,IMultiSourceLoan.Loan,uint256,uint256) (src/lib/loans/MultiSourceLoan.sol#389-402)
	- MultiSourceLoan.refinancePartial(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#235-303)
	- delete _loans[_loanId] (src/lib/loans/MultiSourceLoan.sol#343)
	MultiSourceLoan._loans (src/lib/loans/MultiSourceLoan.sol#45) can be used in cross function reentrancies:
	- MultiSourceLoan._baseLoanChecks(uint256,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#645-652)
	- MultiSourceLoan.delegate(uint256,IMultiSourceLoan.Loan,address,bytes32,bool) (src/lib/loans/MultiSourceLoan.sol#468-480)
	- MultiSourceLoan.getLoanHash(uint256) (src/lib/loans/MultiSourceLoan.sol#513-515)
	- MultiSourceLoan.loanLiquidated(uint256,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#456-465)
	- MultiSourceLoan.mergeTranches(uint256,IMultiSourceLoan.Loan,uint256,uint256) (src/lib/loans/MultiSourceLoan.sol#389-402)
	- MultiSourceLoan.refinancePartial(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#235-303)
Reentrancy in MultiSourceLoan.refinanceFull(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan,bytes) (src/lib/loans/MultiSourceLoan.sol#162-232):
	External calls:
	- (totalAccruedInterest,totalAnnualInterest) = _processOldTranchesFull(_renegotiationOffer,_loan,lenderInitiated) (src/lib/loans/MultiSourceLoan.sol#172-173)
		- ILoanManager(_tranche.lender).loanRepayment(_tranche.loanId,_tranche.principalAmount,_tranche.aprBps,_tranche.accruedInterest,_protocolFeeFraction,_tranche.startTime) (src/lib/loans/MultiSourceLoan.sol#625-632)
	State variables written after the call(s):
	- _loans[newLoanId] = _loan.hash() (src/lib/loans/MultiSourceLoan.sol#224)
	MultiSourceLoan._loans (src/lib/loans/MultiSourceLoan.sol#45) can be used in cross function reentrancies:
	- MultiSourceLoan._baseLoanChecks(uint256,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#645-652)
	- MultiSourceLoan.delegate(uint256,IMultiSourceLoan.Loan,address,bytes32,bool) (src/lib/loans/MultiSourceLoan.sol#468-480)
	- MultiSourceLoan.getLoanHash(uint256) (src/lib/loans/MultiSourceLoan.sol#513-515)
	- MultiSourceLoan.loanLiquidated(uint256,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#456-465)
	- MultiSourceLoan.mergeTranches(uint256,IMultiSourceLoan.Loan,uint256,uint256) (src/lib/loans/MultiSourceLoan.sol#389-402)
	- MultiSourceLoan.refinancePartial(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#235-303)
	- delete _loans[_renegotiationOffer.loanId] (src/lib/loans/MultiSourceLoan.sol#225)
	MultiSourceLoan._loans (src/lib/loans/MultiSourceLoan.sol#45) can be used in cross function reentrancies:
	- MultiSourceLoan._baseLoanChecks(uint256,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#645-652)
	- MultiSourceLoan.delegate(uint256,IMultiSourceLoan.Loan,address,bytes32,bool) (src/lib/loans/MultiSourceLoan.sol#468-480)
	- MultiSourceLoan.getLoanHash(uint256) (src/lib/loans/MultiSourceLoan.sol#513-515)
	- MultiSourceLoan.loanLiquidated(uint256,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#456-465)
	- MultiSourceLoan.mergeTranches(uint256,IMultiSourceLoan.Loan,uint256,uint256) (src/lib/loans/MultiSourceLoan.sol#389-402)
	- MultiSourceLoan.refinancePartial(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#235-303)
Reentrancy in MultiSourceLoan.refinancePartial(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#235-303):
	External calls:
	- (accruedInterest,annualInterest,thisProtocolFee) = _processOldTranche(_renegotiationOffer.lender,_loan.principalAddress,tranche,_loan.startTime + _loan.duration,_loan.protocolFee) (src/lib/loans/MultiSourceLoan.sol#264-270)
		- ILoanManager(_tranche.lender).loanRepayment(_tranche.loanId,_tranche.principalAmount,_tranche.aprBps,_tranche.accruedInterest,_protocolFeeFraction,_tranche.startTime) (src/lib/loans/MultiSourceLoan.sol#625-632)
	State variables written after the call(s):
	- _loans[newLoanId] = _loan.hash() (src/lib/loans/MultiSourceLoan.sol#296)
	MultiSourceLoan._loans (src/lib/loans/MultiSourceLoan.sol#45) can be used in cross function reentrancies:
	- MultiSourceLoan._baseLoanChecks(uint256,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#645-652)
	- MultiSourceLoan.delegate(uint256,IMultiSourceLoan.Loan,address,bytes32,bool) (src/lib/loans/MultiSourceLoan.sol#468-480)
	- MultiSourceLoan.getLoanHash(uint256) (src/lib/loans/MultiSourceLoan.sol#513-515)
	- MultiSourceLoan.loanLiquidated(uint256,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#456-465)
	- MultiSourceLoan.mergeTranches(uint256,IMultiSourceLoan.Loan,uint256,uint256) (src/lib/loans/MultiSourceLoan.sol#389-402)
	- MultiSourceLoan.refinancePartial(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#235-303)
	- delete _loans[loanId] (src/lib/loans/MultiSourceLoan.sol#297)
	MultiSourceLoan._loans (src/lib/loans/MultiSourceLoan.sol#45) can be used in cross function reentrancies:
	- MultiSourceLoan._baseLoanChecks(uint256,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#645-652)
	- MultiSourceLoan.delegate(uint256,IMultiSourceLoan.Loan,address,bytes32,bool) (src/lib/loans/MultiSourceLoan.sol#468-480)
	- MultiSourceLoan.getLoanHash(uint256) (src/lib/loans/MultiSourceLoan.sol#513-515)
	- MultiSourceLoan.loanLiquidated(uint256,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#456-465)
	- MultiSourceLoan.mergeTranches(uint256,IMultiSourceLoan.Loan,uint256,uint256) (src/lib/loans/MultiSourceLoan.sol#389-402)
	- MultiSourceLoan.refinancePartial(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#235-303)
Reentrancy in MultiSourceLoan.repayLoan(IMultiSourceLoan.LoanRepaymentData) (src/lib/loans/MultiSourceLoan.sol#405-434):
	External calls:
	- IDelegateRegistry(getDelegateRegistry).delegateERC721(loan.borrower,loan.nftCollateralAddress,loan.nftCollateralTokenId,bytes32(),true) (src/lib/loans/MultiSourceLoan.sol#417-419)
	- ERC721(loan.nftCollateralAddress).transferFrom(address(this),loan.borrower,loan.nftCollateralTokenId) (src/lib/loans/MultiSourceLoan.sol#422)
	- handleAfterNFTTransferCallback(loan,msg.sender,_repaymentData.data.callbackData) (src/lib/loans/MultiSourceLoan.sol#425)
		- ! _isWhitelistedCallbackContract[_callbackAddress] || ILoanCallback(_callbackAddress).afterNFTTransfer(_loan,_callbackData) != ILoanCallback.afterNFTTransfer.selector (src/lib/callbacks/CallbackHandler.sol#77-79)
	- (totalRepayment,totalProtocolFee) = _processRepayments(loan) (src/lib/loans/MultiSourceLoan.sol#428)
		- ILoanManager(tranche.lender).loanRepayment(tranche.loanId,tranche.principalAmount,tranche.aprBps,tranche.accruedInterest,loan.protocolFee,tranche.startTime) (src/lib/loans/MultiSourceLoan.sol#949-956)
	State variables written after the call(s):
	- delete _loans[loanId] (src/lib/loans/MultiSourceLoan.sol#433)
	MultiSourceLoan._loans (src/lib/loans/MultiSourceLoan.sol#45) can be used in cross function reentrancies:
	- MultiSourceLoan._baseLoanChecks(uint256,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#645-652)
	- MultiSourceLoan.delegate(uint256,IMultiSourceLoan.Loan,address,bytes32,bool) (src/lib/loans/MultiSourceLoan.sol#468-480)
	- MultiSourceLoan.getLoanHash(uint256) (src/lib/loans/MultiSourceLoan.sol#513-515)
	- MultiSourceLoan.loanLiquidated(uint256,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#456-465)
	- MultiSourceLoan.mergeTranches(uint256,IMultiSourceLoan.Loan,uint256,uint256) (src/lib/loans/MultiSourceLoan.sol#389-402)
	- MultiSourceLoan.refinancePartial(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#235-303)
Reentrancy in AuctionLoanLiquidator.settleAuction(IAuctionLoanLiquidator.Auction,IMultiSourceLoan.Loan) (src/lib/AuctionLoanLiquidator.sol#261-303):
	External calls:
	- ERC721(collateralAddress).transferFrom(address(this),_auction.highestBidder,tokenId) (src/lib/AuctionLoanLiquidator.sol#278)
	- asset.approve(address(_liquidationDistributor),proceeds) (src/lib/AuctionLoanLiquidator.sol#287)
	- _liquidationDistributor.distribute(proceeds,_loan) (src/lib/AuctionLoanLiquidator.sol#288)
	- IMultiSourceLoan(_auction.loanAddress).loanLiquidated(_auction.loanId,_loan) (src/lib/AuctionLoanLiquidator.sol#289)
	State variables written after the call(s):
	- delete _auctions[collateralAddress][tokenId] (src/lib/AuctionLoanLiquidator.sol#302)
	AuctionLoanLiquidator._auctions (src/lib/AuctionLoanLiquidator.sol#56) can be used in cross function reentrancies:
	- AuctionLoanLiquidator.getAuctionHash(address,uint256) (src/lib/AuctionLoanLiquidator.sol#306-308)
Reentrancy in AuctionWithBuyoutLoanLiquidator.settleWithBuyout(address,uint256,IAuctionLoanLiquidator.Auction,IMultiSourceLoan.Loan) (src/lib/AuctionWithBuyoutLoanLiquidator.sol#55-104):
	External calls:
	- IMultiSourceLoan(_auction.loanAddress).loanLiquidated(_auction.loanId,_loan) (src/lib/AuctionWithBuyoutLoanLiquidator.sol#95)
	- ERC721(_loan.nftCollateralAddress).transferFrom(address(this),msg.sender,_tokenId) (src/lib/AuctionWithBuyoutLoanLiquidator.sol#99)
	State variables written after the call(s):
	- delete _auctions[_nftAddress][_tokenId] (src/lib/AuctionWithBuyoutLoanLiquidator.sol#101)
	AuctionLoanLiquidator._auctions (src/lib/AuctionLoanLiquidator.sol#56) can be used in cross function reentrancies:
	- AuctionLoanLiquidator.getAuctionHash(address,uint256) (src/lib/AuctionLoanLiquidator.sol#306-308)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1
INFO:Detectors:
AuctionWithBuyoutLoanLiquidator.settleWithBuyout(address,uint256,IAuctionLoanLiquidator.Auction,IMultiSourceLoan.Loan).totalOwed (src/lib/AuctionWithBuyoutLoanLiquidator.sol#82) is a local variable never initialized
AuctionWithBuyoutLoanLiquidator.settleWithBuyout(address,uint256,IAuctionLoanLiquidator.Auction,IMultiSourceLoan.Loan).largestPrincipal (src/lib/AuctionWithBuyoutLoanLiquidator.sol#68) is a local variable never initialized
AuctionWithBuyoutLoanLiquidator.settleWithBuyout(address,uint256,IAuctionLoanLiquidator.Auction,IMultiSourceLoan.Loan).largestTrancheIdx (src/lib/AuctionWithBuyoutLoanLiquidator.sol#67) is a local variable never initialized
Pool._loanTermination(address,uint256,uint256,uint256,uint256,uint256).idx (src/lib/pools/Pool.sol#526) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables
INFO:Detectors:
AuctionLoanLiquidator.settleAuction(IAuctionLoanLiquidator.Auction,IMultiSourceLoan.Loan) (src/lib/AuctionLoanLiquidator.sol#261-303) ignores return value by asset.approve(address(_liquidationDistributor),proceeds) (src/lib/AuctionLoanLiquidator.sol#287)
PurchaseBundler.sell(bytes[]) (src/lib/callbacks/PurchaseBundler.sol#129-141) ignores return value by _multiSourceLoan.multicall(_executionData) (src/lib/callbacks/PurchaseBundler.sol#130)
MultiSourceLoan.repayLoan(IMultiSourceLoan.LoanRepaymentData) (src/lib/loans/MultiSourceLoan.sol#405-434) ignores return value by IDelegateRegistry(getDelegateRegistry).delegateERC721(loan.borrower,loan.nftCollateralAddress,loan.nftCollateralTokenId,bytes32(),true) (src/lib/loans/MultiSourceLoan.sol#417-419)
MultiSourceLoan.delegate(uint256,IMultiSourceLoan.Loan,address,bytes32,bool) (src/lib/loans/MultiSourceLoan.sol#468-480) ignores return value by IDelegateRegistry(getDelegateRegistry).delegateERC721(_delegate,loan.nftCollateralAddress,loan.nftCollateralTokenId,_rights,_value) (src/lib/loans/MultiSourceLoan.sol#475-477)
MultiSourceLoan.revokeDelegate(address,address,uint256) (src/lib/loans/MultiSourceLoan.sol#483-491) ignores return value by IDelegateRegistry(getDelegateRegistry).delegateERC721(_delegate,_collection,_tokenId,,false) (src/lib/loans/MultiSourceLoan.sol#488)
AaveUsdcBaseInterestAllocator.constructor(address,address,address,address) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#35-45) ignores return value by ERC20(__usdc).approve(__aavePool,type()(uint256).max) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#43)
AaveUsdcBaseInterestAllocator.constructor(address,address,address,address) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#35-45) ignores return value by ERC20(__aToken).approve(__aavePool,type()(uint256).max) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#44)
AaveUsdcBaseInterestAllocator._getBaseApr() (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#101-104) ignores return value by (currentLiquidityRate) = IAaveLendingPool(_aavePool).getReserveData(_usdc) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#102)
LidoEthBaseInterestAllocator.constructor(address,address,address,address,uint256,uint96) (src/lib/pools/LidoEthBaseInterestAllocator.sol#47-65) ignores return value by ERC20(__lido).approve(__curvePool,type()(uint256).max) (src/lib/pools/LidoEthBaseInterestAllocator.sol#64)
LidoEthBaseInterestAllocator.reallocate(uint256,uint256,bool) (src/lib/pools/LidoEthBaseInterestAllocator.sol#114-129) ignores return value by ILido(_lido).submit{value: amount}(address(0)) (src/lib/pools/LidoEthBaseInterestAllocator.sol#123)
LoanManager.addCallers(LoanManager.PendingCaller[]) (src/lib/loans/LoanManager.sol#76-97) ignores return value by _acceptedCallers.add(caller.caller) (src/lib/loans/LoanManager.sol#87)
Pool.constructor(address,address,uint256,IPool.OptimalIdleRange,uint256,uint256,ERC20,string,string) (src/lib/pools/Pool.sol#137-174) ignores return value by _asset.approve(address(_feeManager),type()(uint256).max) (src/lib/pools/Pool.sol#173)
Pool.confirmBaseInterestAllocator(address) (src/lib/pools/Pool.sol#202-221) ignores return value by asset.approve(cachedAllocator,0) (src/lib/pools/Pool.sol#212)
Pool.confirmBaseInterestAllocator(address) (src/lib/pools/Pool.sol#202-221) ignores return value by asset.approve(_newBaseInterestAllocator,type()(uint256).max) (src/lib/pools/Pool.sol#214)
Pool.afterCallerAdded(address) (src/lib/pools/Pool.sol#234-236) ignores return value by asset.approve(_caller,type()(uint256).max) (src/lib/pools/Pool.sol#235)
Pool._withdraw(address,address,uint256,uint256) (src/lib/pools/Pool.sol#757-765) ignores return value by WithdrawalQueue(_deployedQueues[_pendingQueueIndex].contractAddress).mint(receiver,shares) (src/lib/pools/Pool.sol#764)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return
INFO:Detectors:
BaseLoan.constructor(string,address,address,WithProtocolFee.ProtocolFee,address,address,uint256).owner (src/lib/loans/BaseLoan.sol#115) shadows:
	- Owned.owner (lib/solmate/src/auth/Owned.sol#17) (state variable)
Pool.withdraw(uint256,address,address).owner (src/lib/pools/Pool.sol#274) shadows:
	- Owned.owner (lib/solmate/src/auth/Owned.sol#17) (state variable)
Pool.redeem(uint256,address,address).owner (src/lib/pools/Pool.sol#285) shadows:
	- Owned.owner (lib/solmate/src/auth/Owned.sol#17) (state variable)
Pool._withdraw(address,address,uint256,uint256).owner (src/lib/pools/Pool.sol#757) shadows:
	- Owned.owner (lib/solmate/src/auth/Owned.sol#17) (state variable)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing
INFO:Detectors:
Pool.loanRepayment(uint256,uint256,uint256,uint256,uint256,uint256) (src/lib/pools/Pool.sol#432-446) should emit an event for: 
	- getCollectedFees += fees (src/lib/pools/Pool.sol#444) 
Pool.loanLiquidation(uint256,uint256,uint256,uint256,uint256,uint256,uint256) (src/lib/pools/Pool.sol#449-463) should emit an event for: 
	- getCollectedFees += fees (src/lib/pools/Pool.sol#461) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic
INFO:Detectors:
Owned.transferOwnership(address).newOwner (lib/solmate/src/auth/Owned.sol#39) lacks a zero-check on :
		- owner = newOwner (lib/solmate/src/auth/Owned.sol#40)
TwoStepOwned.requestTransferOwner(address)._newOwner (src/lib/utils/TwoStepOwned.sol#26) lacks a zero-check on :
		- pendingOwner = _newOwner (src/lib/utils/TwoStepOwned.sol#27)
PurchaseBundler.updateMultiSourceLoanAddressFirst(address)._newAddress (src/lib/callbacks/PurchaseBundler.sol#229) lacks a zero-check on :
		- _pendingMultiSourceLoanAddress = _newAddress (src/lib/callbacks/PurchaseBundler.sol#232)
LiquidationHandler.updateLiquidationContract(address).__loanLiquidator (src/lib/LiquidationHandler.sol#64) lacks a zero-check on :
		- _loanLiquidator = __loanLiquidator (src/lib/LiquidationHandler.sol#66)
MultiSourceLoan.constructor(address,WithProtocolFee.ProtocolFee,address,address,uint256,uint256,address,address,address,uint256).delegateRegistry (src/lib/loans/MultiSourceLoan.sol#99) lacks a zero-check on :
		- getDelegateRegistry = delegateRegistry (src/lib/loans/MultiSourceLoan.sol#118)
MultiSourceLoan.constructor(address,WithProtocolFee.ProtocolFee,address,address,uint256,uint256,address,address,address,uint256).flashActionContract (src/lib/loans/MultiSourceLoan.sol#101) lacks a zero-check on :
		- getFlashActionContract = flashActionContract (src/lib/loans/MultiSourceLoan.sol#119)
MultiSourceLoan.setDelegateRegistry(address)._newDelegateRegistry (src/lib/loans/MultiSourceLoan.sol#494) lacks a zero-check on :
		- getDelegateRegistry = _newDelegateRegistry (src/lib/loans/MultiSourceLoan.sol#495)
MultiSourceLoan.setFlashActionContract(address)._newFlashActionContract (src/lib/loans/MultiSourceLoan.sol#548) lacks a zero-check on :
		- getFlashActionContract = _newFlashActionContract (src/lib/loans/MultiSourceLoan.sol#549)
AaveUsdcBaseInterestAllocator.constructor(address,address,address,address).__aavePool (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#35) lacks a zero-check on :
		- _aavePool = __aavePool (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#40)
AaveUsdcBaseInterestAllocator.constructor(address,address,address,address).__aToken (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#35) lacks a zero-check on :
		- _aToken = __aToken (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#42)
LidoEthBaseInterestAllocator.constructor(address,address,address,address,uint256,uint96).__curvePool (src/lib/pools/LidoEthBaseInterestAllocator.sol#49) lacks a zero-check on :
		- _curvePool = __curvePool (src/lib/pools/LidoEthBaseInterestAllocator.sol#59)
LidoEthBaseInterestAllocator.constructor(address,address,address,address,uint256,uint96).__lido (src/lib/pools/LidoEthBaseInterestAllocator.sol#51) lacks a zero-check on :
		- _lido = __lido (src/lib/pools/LidoEthBaseInterestAllocator.sol#61)
LoanManager.setUnderwriter(address).__underwriter (src/lib/loans/LoanManager.sol#108) lacks a zero-check on :
		- getPendingUnderwriter = __underwriter (src/lib/loans/LoanManager.sol#111)
Pool.constructor(address,address,uint256,IPool.OptimalIdleRange,uint256,uint256,ERC20,string,string)._feeManager (src/lib/pools/Pool.sol#138) lacks a zero-check on :
		- getFeeManager = _feeManager (src/lib/pools/Pool.sol#148)
Pool.setBaseInterestAllocator(address)._newBaseInterestAllocator (src/lib/pools/Pool.sol#192) lacks a zero-check on :
		- getPendingBaseInterestAllocator = _newBaseInterestAllocator (src/lib/pools/Pool.sol#195)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation
INFO:Detectors:
LiquidationDistributor._handleLoanManagerCall(IMultiSourceLoan.Tranche,uint256) (src/lib/LiquidationDistributor.sol#110-122) has external calls inside a loop: getLoanManagerRegistry.isLoanManager(_tranche.lender) (src/lib/LiquidationDistributor.sol#111)
LiquidationDistributor._handleLoanManagerCall(IMultiSourceLoan.Tranche,uint256) (src/lib/LiquidationDistributor.sol#110-122) has external calls inside a loop: LoanManager(_tranche.lender).loanLiquidation(_tranche.loanId,_tranche.principalAmount,_tranche.aprBps,_tranche.accruedInterest,0,_sent,_tranche.startTime) (src/lib/LiquidationDistributor.sol#112-120)
UserVault._withdrawERC721(uint256,address,uint256) (src/lib/UserVault.sol#317-329) has external calls inside a loop: ERC721(_collection).transferFrom(address(this),msg.sender,_tokenId) (src/lib/UserVault.sol#324)
UserVault._depositERC721(address,uint256,address,uint256) (src/lib/UserVault.sol#285-291) has external calls inside a loop: ERC721(_collection).transferFrom(_depositor,address(this),_tokenId) (src/lib/UserVault.sol#286)
UserVault._depositOldERC721(address,uint256,address,uint256) (src/lib/UserVault.sol#293-302) has external calls inside a loop: _depositor != IOldERC721(_collection).ownerOf(_tokenId) (src/lib/UserVault.sol#294)
UserVault._depositOldERC721(address,uint256,address,uint256) (src/lib/UserVault.sol#293-302) has external calls inside a loop: IOldERC721(_collection).takeOwnership(_tokenId) (src/lib/UserVault.sol#297)
UserVault._withdrawOldERC721(uint256,address,uint256) (src/lib/UserVault.sol#331-343) has external calls inside a loop: IOldERC721(_collection).transfer(msg.sender,_tokenId) (src/lib/UserVault.sol#338)
MultiSourceLoan._processOldTranche(address,address,IMultiSourceLoan.Tranche,uint256,uint256) (src/lib/loans/MultiSourceLoan.sol#604-640) has external calls inside a loop: getLoanManagerRegistry.isLoanManager(_tranche.lender) (src/lib/loans/MultiSourceLoan.sol#624)
MultiSourceLoan._processOldTranche(address,address,IMultiSourceLoan.Tranche,uint256,uint256) (src/lib/loans/MultiSourceLoan.sol#604-640) has external calls inside a loop: ILoanManager(_tranche.lender).loanRepayment(_tranche.loanId,_tranche.principalAmount,_tranche.aprBps,_tranche.accruedInterest,_protocolFeeFraction,_tranche.startTime) (src/lib/loans/MultiSourceLoan.sol#625-632)
Pool.afterCallerAdded(address) (src/lib/pools/Pool.sol#234-236) has external calls inside a loop: asset.approve(_caller,type()(uint256).max) (src/lib/pools/Pool.sol#235)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop
INFO:Detectors:
Reentrancy in UserVault._depositERC721(address,uint256,address,uint256) (src/lib/UserVault.sol#285-291):
	External calls:
	- ERC721(_collection).transferFrom(_depositor,address(this),_tokenId) (src/lib/UserVault.sol#286)
	State variables written after the call(s):
	- _vaultERC721s[_collection][_tokenId] = _vaultId (src/lib/UserVault.sol#288)
Reentrancy in UserVault._depositOldERC721(address,uint256,address,uint256) (src/lib/UserVault.sol#293-302):
	External calls:
	- IOldERC721(_collection).takeOwnership(_tokenId) (src/lib/UserVault.sol#297)
	State variables written after the call(s):
	- _vaultOldERC721s[_collection][_tokenId] = _vaultId (src/lib/UserVault.sol#299)
Reentrancy in Pool._queueClaimAll(uint256,uint256) (src/lib/pools/Pool.sol#687-717):
	External calls:
	- _reallocateOnWithdrawal(_totalToBeWithdrawn) (src/lib/pools/Pool.sol#688)
		- IBaseInterestAllocator(getBaseInterestAllocator).reallocate(currentBalance,_withdrawn + targetIdle,true) (src/lib/pools/Pool.sol#600)
	State variables written after the call(s):
	- getAvailableToWithdraw = 0 (src/lib/pools/Pool.sol#699)
	- _updatePendingWithdrawalWithQueue(idx,_cachedPendingQueueIndex,pendingWithdrawal) (src/lib/pools/Pool.sol#694)
		- getTotalReceived[_idx] = 0 (src/lib/pools/Pool.sol#654)
Reentrancy in UserVault.burnAndWithdraw(uint256,address[],uint256[],address[]) (src/lib/UserVault.sol#125-145):
	External calls:
	- _withdrawERC721(_vaultId,_collections[i],_tokenIds[i]) (src/lib/UserVault.sol#133)
		- ERC721(_collection).transferFrom(address(this),msg.sender,_tokenId) (src/lib/UserVault.sol#324)
	State variables written after the call(s):
	- _withdrawERC20(_vaultId,_tokens[i_scope_0]) (src/lib/UserVault.sol#139)
		- delete _vaultERC20s[_token][_vaultId] (src/lib/UserVault.sol#350)
Reentrancy in Pool.deployWithdrawalQueue() (src/lib/pools/Pool.sol#317-389):
	External calls:
	- _queueClaimAll(proRataLiquid + getAvailableToWithdraw,pendingQueueIndex) (src/lib/pools/Pool.sol#347)
		- IBaseInterestAllocator(getBaseInterestAllocator).reallocate(currentBalance,_withdrawn + targetIdle,true) (src/lib/pools/Pool.sol#600)
	State variables written after the call(s):
	- delete _outstandingValues (src/lib/pools/Pool.sol#379)
	- _queueOutstandingValues[pendingQueueIndex] = _outstandingValues (src/lib/pools/Pool.sol#376)
	- delete _queueOutstandingValues[lastQueueIndex] (src/lib/pools/Pool.sol#378)
	- _updateLoanLastIds() (src/lib/pools/Pool.sol#381)
		- getLastLoanId[_pendingQueueIndex][caller] = IBaseLoan(caller).getTotalLoansIssued() (src/lib/pools/Pool.sol#630)
Reentrancy in MultiSourceLoan.emitLoan(IMultiSourceLoan.LoanExecutionData) (src/lib/loans/MultiSourceLoan.sol#124-159):
	External calls:
	- (loanId,offerIds,loan,totalFee) = _processOffersFromExecutionData(borrower,executionData.principalReceiver,principalAddress,nftCollateralAddress,executionData.tokenId,executionData.duration,offerExecution) (src/lib/loans/MultiSourceLoan.sol#138-147)
		- ILoanManager(lender).validateOffer(abi.encode(_offerExecution),_feeFraction) (src/lib/loans/MultiSourceLoan.sol#760)
		- IOfferValidator(thisValidator.validator).validateOffer(_loanOffer,_tokenId,thisValidator.arguments) (src/lib/loans/MultiSourceLoan.sol#914)
	- handleAfterPrincipalTransferCallback(loan,msg.sender,executionData.callbackData,totalFee) (src/lib/loans/MultiSourceLoan.sol#150)
		- ! _isWhitelistedCallbackContract[_callbackAddress] || ILoanCallback(_callbackAddress).afterPrincipalTransfer(_loan,_fee,_callbackData) != ILoanCallback.afterPrincipalTransfer.selector (src/lib/callbacks/CallbackHandler.sol#59-61)
	- ERC721(nftCollateralAddress).transferFrom(borrower,address(this),executionData.tokenId) (src/lib/loans/MultiSourceLoan.sol#153)
	State variables written after the call(s):
	- _loans[loanId] = loan.hash() (src/lib/loans/MultiSourceLoan.sol#155)
Reentrancy in Pool.loanLiquidation(uint256,uint256,uint256,uint256,uint256,uint256,uint256) (src/lib/pools/Pool.sol#449-463):
	External calls:
	- fees = IFeeManager(getFeeManager).processFees(_received,0) (src/lib/pools/Pool.sol#460)
	State variables written after the call(s):
	- _loanTermination(msg.sender,_loanId,_principalAmount,netApr,interestEarned,_received - fees) (src/lib/pools/Pool.sol#462)
		- _outstandingValues = _updateOutstandingValuesOnTermination(_outstandingValues,_principalAmount,_apr,_interestEarned) (src/lib/pools/Pool.sol#540-541)
	- _loanTermination(msg.sender,_loanId,_principalAmount,netApr,interestEarned,_received - fees) (src/lib/pools/Pool.sol#462)
		- _queueOutstandingValues[idx] = _updateOutstandingValuesOnTermination(_queueOutstandingValues[idx],_principalAmount,_apr,_interestEarned) (src/lib/pools/Pool.sol#548-550)
	- _loanTermination(msg.sender,_loanId,_principalAmount,netApr,interestEarned,_received - fees) (src/lib/pools/Pool.sol#462)
		- getAvailableToWithdraw += pendingToQueue (src/lib/pools/Pool.sol#547)
	- getCollectedFees += fees (src/lib/pools/Pool.sol#461)
	- _loanTermination(msg.sender,_loanId,_principalAmount,netApr,interestEarned,_received - fees) (src/lib/pools/Pool.sol#462)
		- getTotalReceived[idx] += _received (src/lib/pools/Pool.sol#546)
Reentrancy in Pool.loanRepayment(uint256,uint256,uint256,uint256,uint256,uint256) (src/lib/pools/Pool.sol#432-446):
	External calls:
	- fees = IFeeManager(getFeeManager).processFees(_principalAmount,interestEarned) (src/lib/pools/Pool.sol#443)
	State variables written after the call(s):
	- _loanTermination(msg.sender,_loanId,_principalAmount,netApr,interestEarned,received - fees) (src/lib/pools/Pool.sol#445)
		- _outstandingValues = _updateOutstandingValuesOnTermination(_outstandingValues,_principalAmount,_apr,_interestEarned) (src/lib/pools/Pool.sol#540-541)
	- _loanTermination(msg.sender,_loanId,_principalAmount,netApr,interestEarned,received - fees) (src/lib/pools/Pool.sol#445)
		- _queueOutstandingValues[idx] = _updateOutstandingValuesOnTermination(_queueOutstandingValues[idx],_principalAmount,_apr,_interestEarned) (src/lib/pools/Pool.sol#548-550)
	- _loanTermination(msg.sender,_loanId,_principalAmount,netApr,interestEarned,received - fees) (src/lib/pools/Pool.sol#445)
		- getAvailableToWithdraw += pendingToQueue (src/lib/pools/Pool.sol#547)
	- getCollectedFees += fees (src/lib/pools/Pool.sol#444)
	- _loanTermination(msg.sender,_loanId,_principalAmount,netApr,interestEarned,received - fees) (src/lib/pools/Pool.sol#445)
		- getTotalReceived[idx] += _received (src/lib/pools/Pool.sol#546)
Reentrancy in Pool.reallocate() (src/lib/pools/Pool.sol#419-429):
	External calls:
	- (currentBalance,targetIdle) = _reallocate() (src/lib/pools/Pool.sol#420)
		- IBaseInterestAllocator(getBaseInterestAllocator).reallocate(currentBalance,targetIdle,false) (src/lib/pools/Pool.sol#585)
	State variables written after the call(s):
	- _mint(msg.sender,shares) (src/lib/pools/Pool.sol#424)
		- balanceOf[to] += amount (lib/solmate/src/tokens/ERC20.sol#189)
	- _mint(msg.sender,shares) (src/lib/pools/Pool.sol#424)
		- totalSupply += amount (lib/solmate/src/tokens/ERC20.sol#184)
Reentrancy in MultiSourceLoan.refinanceFull(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan,bytes) (src/lib/loans/MultiSourceLoan.sol#162-232):
	External calls:
	- (totalAccruedInterest,totalAnnualInterest) = _processOldTranchesFull(_renegotiationOffer,_loan,lenderInitiated) (src/lib/loans/MultiSourceLoan.sol#172-173)
		- ILoanManager(_tranche.lender).loanRepayment(_tranche.loanId,_tranche.principalAmount,_tranche.aprBps,_tranche.accruedInterest,_protocolFeeFraction,_tranche.startTime) (src/lib/loans/MultiSourceLoan.sol#625-632)
	State variables written after the call(s):
	- newLoanId = _getAndSetNewLoanId() (src/lib/loans/MultiSourceLoan.sol#209)
		- ++ getTotalLoansIssued (src/lib/loans/BaseLoan.sol#199)
Reentrancy in Pool.validateOffer(bytes,uint256) (src/lib/pools/Pool.sol#392-416):
	External calls:
	- (principalAmount,apr) = IPoolOfferHandler(getUnderwriter).validateOffer(IBaseInterestAllocator(getBaseInterestAllocator).getBaseAprWithUpdate(),_offer) (src/lib/pools/Pool.sol#399-401)
	- IBaseInterestAllocator(getBaseInterestAllocator).reallocate(currentBalance,principalAmount - currentBalance,true) (src/lib/pools/Pool.sol#410-412)
	State variables written after the call(s):
	- _outstandingValues = _getNewLoanAccounting(principalAmount,_netApr(apr,_protocolFee)) (src/lib/pools/Pool.sol#415)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2
INFO:Detectors:
Reentrancy in UserVault._depositERC721(address,uint256,address,uint256) (src/lib/UserVault.sol#285-291):
	External calls:
	- ERC721(_collection).transferFrom(_depositor,address(this),_tokenId) (src/lib/UserVault.sol#286)
	Event emitted after the call(s):
	- ERC721Deposited(_vaultId,_collection,_tokenId) (src/lib/UserVault.sol#290)
Reentrancy in UserVault._depositOldERC721(address,uint256,address,uint256) (src/lib/UserVault.sol#293-302):
	External calls:
	- IOldERC721(_collection).takeOwnership(_tokenId) (src/lib/UserVault.sol#297)
	Event emitted after the call(s):
	- OldERC721Deposited(_vaultId,_collection,_tokenId) (src/lib/UserVault.sol#301)
Reentrancy in LiquidationHandler._liquidateLoan(uint256,IMultiSourceLoan.Loan,bool) (src/lib/LiquidationHandler.sol#86-114):
	External calls:
	- ERC721(_loan.nftCollateralAddress).transferFrom(address(this),_loan.tranche[0].lender,_loan.nftCollateralTokenId) (src/lib/LiquidationHandler.sol#95-97)
	Event emitted after the call(s):
	- LoanForeclosed(_loanId) (src/lib/LiquidationHandler.sol#98)
Reentrancy in LiquidationHandler._liquidateLoan(uint256,IMultiSourceLoan.Loan,bool) (src/lib/LiquidationHandler.sol#86-114):
	External calls:
	- ERC721(_loan.nftCollateralAddress).transferFrom(address(this),_loanLiquidator,_loan.nftCollateralTokenId) (src/lib/LiquidationHandler.sol#102)
	- liquidation = ILoanLiquidator(_loanLiquidator).liquidateLoan(_loanId,_loan.nftCollateralAddress,_loan.nftCollateralTokenId,_loan.principalAddress,_liquidationAuctionDuration,msg.sender) (src/lib/LiquidationHandler.sol#103-110)
	Event emitted after the call(s):
	- LoanSentToLiquidator(_loanId,_loanLiquidator) (src/lib/LiquidationHandler.sol#112)
Reentrancy in UserVault._withdrawERC721(uint256,address,uint256) (src/lib/UserVault.sol#317-329):
	External calls:
	- ERC721(_collection).transferFrom(address(this),msg.sender,_tokenId) (src/lib/UserVault.sol#324)
	Event emitted after the call(s):
	- ERC721Withdrawn(_vaultId,_collection,_tokenId) (src/lib/UserVault.sol#328)
Reentrancy in UserVault._withdrawEth(uint256) (src/lib/UserVault.sol#362-375):
	External calls:
	- (sent) = address(msg.sender).call{value: amount}() (src/lib/UserVault.sol#369)
	Event emitted after the call(s):
	- ERC20Withdrawn(_vaultId,ETH,amount) (src/lib/UserVault.sol#374)
Reentrancy in UserVault._withdrawOldERC721(uint256,address,uint256) (src/lib/UserVault.sol#331-343):
	External calls:
	- IOldERC721(_collection).transfer(msg.sender,_tokenId) (src/lib/UserVault.sol#338)
	Event emitted after the call(s):
	- OldERC721Withdrawn(_vaultId,_collection,_tokenId) (src/lib/UserVault.sol#342)
Reentrancy in UserVault.burnAndWithdraw(uint256,address[],uint256[],address[]) (src/lib/UserVault.sol#125-145):
	External calls:
	- _withdrawERC721(_vaultId,_collections[i],_tokenIds[i]) (src/lib/UserVault.sol#133)
		- ERC721(_collection).transferFrom(address(this),msg.sender,_tokenId) (src/lib/UserVault.sol#324)
	Event emitted after the call(s):
	- ERC20Withdrawn(_vaultId,_token,amount) (src/lib/UserVault.sol#354)
		- _withdrawERC20(_vaultId,_tokens[i_scope_0]) (src/lib/UserVault.sol#139)
Reentrancy in UserVault.burnAndWithdraw(uint256,address[],uint256[],address[]) (src/lib/UserVault.sol#125-145):
	External calls:
	- _withdrawERC721(_vaultId,_collections[i],_tokenIds[i]) (src/lib/UserVault.sol#133)
		- ERC721(_collection).transferFrom(address(this),msg.sender,_tokenId) (src/lib/UserVault.sol#324)
	- _withdrawEth(_vaultId) (src/lib/UserVault.sol#144)
		- (sent) = address(msg.sender).call{value: amount}() (src/lib/UserVault.sol#369)
	External calls sending eth:
	- _withdrawEth(_vaultId) (src/lib/UserVault.sol#144)
		- (sent) = address(msg.sender).call{value: amount}() (src/lib/UserVault.sol#369)
	Event emitted after the call(s):
	- ERC20Withdrawn(_vaultId,ETH,amount) (src/lib/UserVault.sol#374)
		- _withdrawEth(_vaultId) (src/lib/UserVault.sol#144)
Reentrancy in PurchaseBundler.buy(bytes[]) (src/lib/callbacks/PurchaseBundler.sol#100-125):
	External calls:
	- encodedOutput = _multiSourceLoan.multicall(_executionData) (src/lib/callbacks/PurchaseBundler.sol#105)
	- (success) = address(msg.sender).call{value: remainingBalance}() (src/lib/callbacks/PurchaseBundler.sol#118)
	External calls sending eth:
	- (success) = address(msg.sender).call{value: remainingBalance}() (src/lib/callbacks/PurchaseBundler.sol#118)
	Event emitted after the call(s):
	- BNPLLoansStarted(loanIds) (src/lib/callbacks/PurchaseBundler.sol#123)
Reentrancy in Pool.confirmBaseInterestAllocator(address) (src/lib/pools/Pool.sol#202-221):
	External calls:
	- IBaseInterestAllocator(cachedAllocator).transferAll() (src/lib/pools/Pool.sol#211)
	- asset.approve(cachedAllocator,0) (src/lib/pools/Pool.sol#212)
	- asset.approve(_newBaseInterestAllocator,type()(uint256).max) (src/lib/pools/Pool.sol#214)
	Event emitted after the call(s):
	- BaseInterestAllocatorSet(_newBaseInterestAllocator) (src/lib/pools/Pool.sol#220)
Reentrancy in MultiSourceLoan.delegate(uint256,IMultiSourceLoan.Loan,address,bytes32,bool) (src/lib/loans/MultiSourceLoan.sol#468-480):
	External calls:
	- IDelegateRegistry(getDelegateRegistry).delegateERC721(_delegate,loan.nftCollateralAddress,loan.nftCollateralTokenId,_rights,_value) (src/lib/loans/MultiSourceLoan.sol#475-477)
	Event emitted after the call(s):
	- Delegated(_loanId,_delegate,_value) (src/lib/loans/MultiSourceLoan.sol#479)
Reentrancy in AaveUsdcBaseInterestAllocator.reallocate(uint256,uint256,bool) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#63-76):
	External calls:
	- ERC20(_usdc).transferFrom(pool,address(this),delta) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#67)
	- IAaveLendingPool(_aavePool).deposit(_usdc,delta,address(this),0) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#68)
	- IAaveLendingPool(_aavePool).withdraw(_usdc,delta_scope_0,address(this)) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#71)
	- ERC20(_usdc).transfer(pool,delta_scope_0) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#72)
	Event emitted after the call(s):
	- Reallocated(_currentIdle,_targetIdle) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#75)
Reentrancy in LidoEthBaseInterestAllocator.reallocate(uint256,uint256,bool) (src/lib/pools/LidoEthBaseInterestAllocator.sol#114-129):
	External calls:
	- weth.transferFrom(getPool,address(this),amount) (src/lib/pools/LidoEthBaseInterestAllocator.sol#119)
	- weth.withdraw(amount) (src/lib/pools/LidoEthBaseInterestAllocator.sol#120)
	- ILido(_lido).submit{value: amount}(address(0)) (src/lib/pools/LidoEthBaseInterestAllocator.sol#123)
	- _exchangeAndSendWeth(pool,_targetIdle - _currentIdle,_force) (src/lib/pools/LidoEthBaseInterestAllocator.sol#125)
		- received = ICurve(_curvePool).exchange(1,0,_amount,_amount.mulDivUp(_BPS - slippage,_BPS)) (src/lib/pools/LidoEthBaseInterestAllocator.sol#155)
		- weth.deposit{value: received}() (src/lib/pools/LidoEthBaseInterestAllocator.sol#156)
		- weth.transfer(_pool,received) (src/lib/pools/LidoEthBaseInterestAllocator.sol#157)
	External calls sending eth:
	- ILido(_lido).submit{value: amount}(address(0)) (src/lib/pools/LidoEthBaseInterestAllocator.sol#123)
	- _exchangeAndSendWeth(pool,_targetIdle - _currentIdle,_force) (src/lib/pools/LidoEthBaseInterestAllocator.sol#125)
		- weth.deposit{value: received}() (src/lib/pools/LidoEthBaseInterestAllocator.sol#156)
	Event emitted after the call(s):
	- Reallocated(_currentIdle,_targetIdle) (src/lib/pools/LidoEthBaseInterestAllocator.sol#128)
Reentrancy in MultiSourceLoan.refinancePartial(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#235-303):
	External calls:
	- (accruedInterest,annualInterest,thisProtocolFee) = _processOldTranche(_renegotiationOffer.lender,_loan.principalAddress,tranche,_loan.startTime + _loan.duration,_loan.protocolFee) (src/lib/loans/MultiSourceLoan.sol#264-270)
		- ILoanManager(_tranche.lender).loanRepayment(_tranche.loanId,_tranche.principalAmount,_tranche.aprBps,_tranche.accruedInterest,_protocolFeeFraction,_tranche.startTime) (src/lib/loans/MultiSourceLoan.sol#625-632)
	Event emitted after the call(s):
	- LoanRefinanced(_renegotiationOffer.renegotiationId,loanId,newLoanId,_loan,0) (src/lib/loans/MultiSourceLoan.sol#300)
Reentrancy in MultiSourceLoan.revokeDelegate(address,address,uint256) (src/lib/loans/MultiSourceLoan.sol#483-491):
	External calls:
	- IDelegateRegistry(getDelegateRegistry).delegateERC721(_delegate,_collection,_tokenId,,false) (src/lib/loans/MultiSourceLoan.sol#488)
	Event emitted after the call(s):
	- RevokeDelegate(_delegate,_collection,_tokenId) (src/lib/loans/MultiSourceLoan.sol#490)
Reentrancy in PurchaseBundler.sell(bytes[]) (src/lib/callbacks/PurchaseBundler.sol#129-141):
	External calls:
	- _multiSourceLoan.multicall(_executionData) (src/lib/callbacks/PurchaseBundler.sol#130)
	Event emitted after the call(s):
	- SellAndRepayExecuted(loanIds) (src/lib/callbacks/PurchaseBundler.sol#140)
Reentrancy in AaveUsdcBaseInterestAllocator.transferAll() (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#78-87):
	External calls:
	- IAaveLendingPool(_aavePool).withdraw(_usdc,total,address(this)) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#82)
	- ERC20(_usdc).transfer(pool,total) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#84)
	Event emitted after the call(s):
	- AllTransfered(total) (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#86)
Reentrancy in LidoEthBaseInterestAllocator.transferAll() (src/lib/pools/LidoEthBaseInterestAllocator.sol#132-137):
	External calls:
	- _exchangeAndSendWeth(_onlyPool(),total,true) (src/lib/pools/LidoEthBaseInterestAllocator.sol#134)
		- received = ICurve(_curvePool).exchange(1,0,_amount,_amount.mulDivUp(_BPS - slippage,_BPS)) (src/lib/pools/LidoEthBaseInterestAllocator.sol#155)
		- weth.deposit{value: received}() (src/lib/pools/LidoEthBaseInterestAllocator.sol#156)
		- weth.transfer(_pool,received) (src/lib/pools/LidoEthBaseInterestAllocator.sol#157)
	External calls sending eth:
	- _exchangeAndSendWeth(_onlyPool(),total,true) (src/lib/pools/LidoEthBaseInterestAllocator.sol#134)
		- weth.deposit{value: received}() (src/lib/pools/LidoEthBaseInterestAllocator.sol#156)
	Event emitted after the call(s):
	- AllTransfered(total) (src/lib/pools/LidoEthBaseInterestAllocator.sol#136)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
INFO:Detectors:
ERC20.permit(address,address,uint256,uint256,uint8,bytes32,bytes32) (lib/solmate/src/tokens/ERC20.sol#116-160) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(deadline >= block.timestamp,PERMIT_DEADLINE_EXPIRED) (lib/solmate/src/tokens/ERC20.sol#125)
AuctionLoanLiquidator.placeBid(address,uint256,IAuctionLoanLiquidator.Auction,uint256) (src/lib/AuctionLoanLiquidator.sol#222-258) uses timestamp for comparisons
	Dangerous comparisons:
	- max < currentTime && currentHighestBid > 0 (src/lib/AuctionLoanLiquidator.sol#238)
AuctionLoanLiquidator.settleAuction(IAuctionLoanLiquidator.Auction,IMultiSourceLoan.Loan) (src/lib/AuctionLoanLiquidator.sol#261-303) uses timestamp for comparisons
	Dangerous comparisons:
	- (withMargin > currentTime) || (currentTime < expiration) (src/lib/AuctionLoanLiquidator.sol#273)
AuctionWithBuyoutLoanLiquidator.settleWithBuyout(address,uint256,IAuctionLoanLiquidator.Auction,IMultiSourceLoan.Loan) (src/lib/AuctionWithBuyoutLoanLiquidator.sol#55-104) uses timestamp for comparisons
	Dangerous comparisons:
	- timeLimit < block.timestamp (src/lib/AuctionWithBuyoutLoanLiquidator.sol#64)
AuctionWithBuyoutLoanLiquidator._placeBidChecks(address,uint256,IAuctionLoanLiquidator.Auction,uint256) (src/lib/AuctionWithBuyoutLoanLiquidator.sol#122-132) uses timestamp for comparisons
	Dangerous comparisons:
	- timeLimit > block.timestamp (src/lib/AuctionWithBuyoutLoanLiquidator.sol#129)
LiquidationDistributor.distribute(uint256,IMultiSourceLoan.Loan) (src/lib/LiquidationDistributor.sol#32-73) uses timestamp for comparisons
	Dangerous comparisons:
	- _proceeds > totalPrincipalAndPaidInterestOwed + totalPendingInterestOwed (src/lib/LiquidationDistributor.sol#48)
	- i_scope_2 < _loan.tranche.length && _proceeds > 0 (src/lib/LiquidationDistributor.sol#63)
LiquidationDistributor._handleTrancheInsufficient(address,IMultiSourceLoan.Tranche,address,uint256,uint256) (src/lib/LiquidationDistributor.sol#91-108) uses timestamp for comparisons
	Dangerous comparisons:
	- _proceedsLeft > _trancheOwed (src/lib/LiquidationDistributor.sol#98)
LiquidationHandler._liquidateLoan(uint256,IMultiSourceLoan.Loan,bool) (src/lib/LiquidationHandler.sol#86-114) uses timestamp for comparisons
	Dangerous comparisons:
	- expirationTime > block.timestamp (src/lib/LiquidationHandler.sol#91)
PurchaseBundler.setTaxes() (src/lib/callbacks/PurchaseBundler.sol#282-290) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp < _pendingTaxesSetTime + TAX_UPDATE_NOTICE (src/lib/callbacks/PurchaseBundler.sol#283)
LoanManager.addCallers(LoanManager.PendingCaller[]) (src/lib/loans/LoanManager.sol#76-97) uses timestamp for comparisons
	Dangerous comparisons:
	- getPendingAcceptedCallersSetTime + UPDATE_WAITING_TIME > block.timestamp (src/lib/loans/LoanManager.sol#77)
LoanManager.confirmUnderwriter(address) (src/lib/loans/LoanManager.sol#119-132) uses timestamp for comparisons
	Dangerous comparisons:
	- getPendingUnderwriterSetTime + UPDATE_WAITING_TIME > block.timestamp (src/lib/loans/LoanManager.sol#120)
MultiSourceLoan.delegate(uint256,IMultiSourceLoan.Loan,address,bytes32,bool) (src/lib/loans/MultiSourceLoan.sol#468-480) uses timestamp for comparisons
	Dangerous comparisons:
	- loan.hash() != _loans[_loanId] (src/lib/loans/MultiSourceLoan.sol#469)
MultiSourceLoan._processOldTranche(address,address,IMultiSourceLoan.Tranche,uint256,uint256) (src/lib/loans/MultiSourceLoan.sol#604-640) uses timestamp for comparisons
	Dangerous comparisons:
	- unlockedTime > block.timestamp (src/lib/loans/MultiSourceLoan.sol#612)
MultiSourceLoan._baseLoanChecks(uint256,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#645-652) uses timestamp for comparisons
	Dangerous comparisons:
	- _loan.hash() != _loans[_loanId] (src/lib/loans/MultiSourceLoan.sol#646)
	- _loan.startTime + _loan.duration < block.timestamp (src/lib/loans/MultiSourceLoan.sol#649)
MultiSourceLoan._baseRenegotiationChecks(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan) (src/lib/loans/MultiSourceLoan.sol#655-673) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp > _renegotiationOffer.expirationTime (src/lib/loans/MultiSourceLoan.sol#665)
MultiSourceLoan._isLoanLocked(uint256,uint256) (src/lib/loans/MultiSourceLoan.sol#733-735) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp > _loanEndTime - (_loanEndTime - _loanStartTime).mulDivUp(_minLockPeriod,_PRECISION) (src/lib/loans/MultiSourceLoan.sol#734)
MultiSourceLoan._validateOfferExecution(IMultiSourceLoan.OfferExecution,uint256,address,address,bytes,uint256,uint256) (src/lib/loans/MultiSourceLoan.sol#746-788) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp > offer.expirationTime (src/lib/loans/MultiSourceLoan.sol#765)
MultiSourceLoan._validateExecutionData(IMultiSourceLoan.LoanExecutionData,address) (src/lib/loans/MultiSourceLoan.sol#791-800) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp > _executionData.executionData.expirationTime (src/lib/loans/MultiSourceLoan.sol#797)
MultiSourceLoan._checkStrictlyBetter(uint256,uint256,uint256,uint256,uint256,uint256,uint256) (src/lib/loans/MultiSourceLoan.sol#820-847) uses timestamp for comparisons
	Dangerous comparisons:
	- ((_offerPrincipalAmount - _loanPrincipalAmount > 0) && ((_loanAprBps * _loanPrincipalAmount - _offerAprBps * _offerPrincipalAmount).mulDivDown(_PRECISION,_loanAprBps * _loanPrincipalAmount) < minimum.interest)) || (_offerFee > 0) || (_offerEndTime < _loanEndTime) (src/lib/loans/MultiSourceLoan.sol#836-843)
FeeManager.confirmFees(IFeeManager.Fees) (src/lib/pools/FeeManager.sol#48-60) uses timestamp for comparisons
	Dangerous comparisons:
	- _pendingFeesSetTime + WAIT_TIME > block.timestamp (src/lib/pools/FeeManager.sol#49)
LidoEthBaseInterestAllocator.getBaseApr() (src/lib/pools/LidoEthBaseInterestAllocator.sol#75-89) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp - lidoData.lastTs > getLidoUpdateTolerance (src/lib/pools/LidoEthBaseInterestAllocator.sol#78)
	- aprBps == 0 (src/lib/pools/LidoEthBaseInterestAllocator.sol#85)
LidoEthBaseInterestAllocator.getBaseAprWithUpdate() (src/lib/pools/LidoEthBaseInterestAllocator.sol#92-101) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp - lidoData.lastTs > getLidoUpdateTolerance (src/lib/pools/LidoEthBaseInterestAllocator.sol#94)
	- lidoData.aprBps == 0 (src/lib/pools/LidoEthBaseInterestAllocator.sol#97)
Pool.confirmBaseInterestAllocator(address) (src/lib/pools/Pool.sol#202-221) uses timestamp for comparisons
	Dangerous comparisons:
	- getPendingBaseInterestAllocatorSetTime + UPDATE_WAITING_TIME > block.timestamp (src/lib/pools/Pool.sol#205)
Pool.redeem(uint256,address,address) (src/lib/pools/Pool.sol#285-296) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)((assets = previewRedeem(shares)) != 0,ZERO_ASSETS) (src/lib/pools/Pool.sol#293)
Pool.deployWithdrawalQueue() (src/lib/pools/Pool.sol#317-389) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp - queue.deployedTime < getMinTimeBetweenWithdrawalQueues (src/lib/pools/Pool.sol#323)
	- i < totalQueues - 1 (src/lib/pools/Pool.sol#360)
	- _deployedQueues[idx].contractAddress == address(0) (src/lib/pools/Pool.sol#362)
Pool.validateOffer(bytes,uint256) (src/lib/pools/Pool.sol#392-416) uses timestamp for comparisons
	Dangerous comparisons:
	- principalAmount > undeployedAssets (src/lib/pools/Pool.sol#407)
	- principalAmount > currentBalance (src/lib/pools/Pool.sol#409)
Pool.reallocate() (src/lib/pools/Pool.sol#419-429) uses timestamp for comparisons
	Dangerous comparisons:
	- currentBalance > targetIdle (src/lib/pools/Pool.sol#421)
Pool._reallocate() (src/lib/pools/Pool.sol#570-587) uses timestamp for comparisons
	Dangerous comparisons:
	- currentBalance == 0 (src/lib/pools/Pool.sol#573)
	- fraction >= optimalIdleRange.min && fraction < optimalIdleRange.max (src/lib/pools/Pool.sol#581)
Pool._reallocateOnWithdrawal(uint256) (src/lib/pools/Pool.sol#591-601) uses timestamp for comparisons
	Dangerous comparisons:
	- currentBalance > _withdrawn (src/lib/pools/Pool.sol#594)
Pool._updatePendingWithdrawalWithQueue(uint256,uint256,uint256[]) (src/lib/pools/Pool.sol#643-684) uses timestamp for comparisons
	Dangerous comparisons:
	- totalReceived == 0 (src/lib/pools/Pool.sol#651)
	- queueAccounting.thisQueueFraction == 0 (src/lib/pools/Pool.sol#665)
Pool._outstandingApr(Pool.OutstandingValues) (src/lib/pools/Pool.sol#720-725) uses timestamp for comparisons
	Dangerous comparisons:
	- __outstandingValues.principalAmount == 0 (src/lib/pools/Pool.sol#721)
Pool._updateOutstandingValuesOnTermination(Pool.OutstandingValues,uint256,uint256,uint256) (src/lib/pools/Pool.sol#733-755) uses timestamp for comparisons
	Dangerous comparisons:
	- total < _interestEarned (src/lib/pools/Pool.sol#746)
PoolOfferHandler.confirmTerms(PoolOfferHandler.TermsKey[],PoolOfferHandler.Terms[]) (src/lib/pools/PoolOfferHandler.sol#100-121) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp - pendingTermsSetTime < NEW_TERMS_WAITING_TIME (src/lib/pools/PoolOfferHandler.sol#101)
WithdrawalQueue.withdraw(address,uint256) (src/lib/pools/WithdrawalQueue.sol#84-106) uses timestamp for comparisons
	Dangerous comparisons:
	- unlockTime > block.timestamp (src/lib/pools/WithdrawalQueue.sol#86)
WithdrawalQueue.lockWithdrawals(uint256,uint256) (src/lib/pools/WithdrawalQueue.sol#118-132) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp + _time < getUnlockTime[_tokenId] (src/lib/pools/WithdrawalQueue.sol#124)
TwoStepOwned.transferOwnership(address) (src/lib/utils/TwoStepOwned.sol#35-47) uses timestamp for comparisons
	Dangerous comparisons:
	- pendingOwnerTime + MIN_WAIT_TIME > block.timestamp (src/lib/utils/TwoStepOwned.sol#36)
WithProtocolFee._setProtocolFee() (src/lib/utils/WithProtocolFee.sol#77-85) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp < _pendingProtocolFeeSetTime + FEE_UPDATE_NOTICE (src/lib/utils/WithProtocolFee.sol#78)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp
INFO:Detectors:
console._sendLogPayload(bytes) (lib/forge-std/src/console.sol#7-15) uses assembly
	- INLINE ASM (lib/forge-std/src/console.sol#11-14)
Panic.panic(uint256) (lib/openzeppelin-contracts/contracts/utils/Panic.sol#47-54) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/Panic.sol#49-53)
Strings.toString(uint256) (lib/openzeppelin-contracts/contracts/utils/Strings.sol#24-44) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/Strings.sol#30-32)
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/Strings.sol#36-38)
ECDSA.tryRecover(bytes32,bytes) (lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol#56-73) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol#64-68)
MessageHashUtils.toEthSignedMessageHash(bytes32) (lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol#30-37) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol#32-36)
MessageHashUtils.toTypedDataHash(bytes32,bytes32) (lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol#76-85) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol#78-84)
Math.mulDiv(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#128-207) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#135-138)
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#159-166)
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#172-181)
Math.tryModExp(uint256,uint256,uint256) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#306-331) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#309-330)
Math.tryModExp(bytes,bytes,bytes) (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#347-370) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#360-369)
SafeCast.toUint(bool) (lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol#1157-1162) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol#1159-1161)
EnumerableSet.values(EnumerableSet.Bytes32Set) (lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol#219-229) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol#224-226)
EnumerableSet.values(EnumerableSet.AddressSet) (lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol#293-303) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol#298-300)
EnumerableSet.values(EnumerableSet.UintSet) (lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol#367-377) uses assembly
	- INLINE ASM (lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol#372-374)
CalldataPointerLib.lt(CalldataPointer,CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#50-57) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#54-56)
CalldataPointerLib.gt(CalldataPointer,CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#59-66) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#63-65)
CalldataPointerLib.eq(CalldataPointer,CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#68-75) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#72-74)
CalldataPointerLib.isNull(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#77-81) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#78-80)
CalldataPointerLib.next(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#105-111) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#108-110)
CalldataPointerLib.offset(CalldataPointer,uint256) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#114-121) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#118-120)
CalldataPointerLib.copy(CalldataPointer,MemoryPointer,uint256) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#125-133) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#130-132)
ReturndataPointerLib.lt(ReturndataPointer,ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#137-144) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#141-143)
ReturndataPointerLib.gt(ReturndataPointer,ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#146-153) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#150-152)
ReturndataPointerLib.eq(ReturndataPointer,ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#155-162) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#159-161)
ReturndataPointerLib.isNull(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#164-168) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#165-167)
ReturndataPointerLib.next(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#192-198) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#195-197)
ReturndataPointerLib.offset(ReturndataPointer,uint256) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#201-208) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#205-207)
ReturndataPointerLib.copy(ReturndataPointer,MemoryPointer,uint256) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#212-220) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#217-219)
MemoryPointerLib.copy(MemoryPointer,MemoryPointer,uint256) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#224-242) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#229-241)
MemoryPointerLib.lt(MemoryPointer,MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#244-251) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#248-250)
MemoryPointerLib.gt(MemoryPointer,MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#253-260) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#257-259)
MemoryPointerLib.eq(MemoryPointer,MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#262-269) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#266-268)
MemoryPointerLib.isNull(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#271-275) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#272-274)
MemoryPointerLib.hash(MemoryPointer,uint256) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#277-284) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#281-283)
MemoryPointerLib.next(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#287-293) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#290-292)
MemoryPointerLib.offset(MemoryPointer,uint256) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#296-303) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#300-302)
CalldataReaders.readBool(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#335-341) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#338-340)
CalldataReaders.readAddress(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#344-350) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#347-349)
CalldataReaders.readBytes1(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#353-359) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#356-358)
CalldataReaders.readBytes2(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#362-368) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#365-367)
CalldataReaders.readBytes3(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#371-377) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#374-376)
CalldataReaders.readBytes4(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#380-386) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#383-385)
CalldataReaders.readBytes5(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#389-395) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#392-394)
CalldataReaders.readBytes6(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#398-404) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#401-403)
CalldataReaders.readBytes7(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#407-413) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#410-412)
CalldataReaders.readBytes8(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#416-422) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#419-421)
CalldataReaders.readBytes9(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#425-431) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#428-430)
CalldataReaders.readBytes10(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#434-440) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#437-439)
CalldataReaders.readBytes11(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#443-449) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#446-448)
CalldataReaders.readBytes12(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#452-458) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#455-457)
CalldataReaders.readBytes13(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#461-467) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#464-466)
CalldataReaders.readBytes14(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#470-476) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#473-475)
CalldataReaders.readBytes15(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#479-485) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#482-484)
CalldataReaders.readBytes16(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#488-494) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#491-493)
CalldataReaders.readBytes17(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#497-503) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#500-502)
CalldataReaders.readBytes18(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#506-512) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#509-511)
CalldataReaders.readBytes19(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#515-521) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#518-520)
CalldataReaders.readBytes20(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#524-530) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#527-529)
CalldataReaders.readBytes21(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#533-539) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#536-538)
CalldataReaders.readBytes22(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#542-548) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#545-547)
CalldataReaders.readBytes23(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#551-557) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#554-556)
CalldataReaders.readBytes24(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#560-566) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#563-565)
CalldataReaders.readBytes25(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#569-575) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#572-574)
CalldataReaders.readBytes26(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#578-584) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#581-583)
CalldataReaders.readBytes27(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#587-593) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#590-592)
CalldataReaders.readBytes28(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#596-602) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#599-601)
CalldataReaders.readBytes29(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#605-611) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#608-610)
CalldataReaders.readBytes30(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#614-620) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#617-619)
CalldataReaders.readBytes31(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#623-629) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#626-628)
CalldataReaders.readBytes32(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#632-638) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#635-637)
CalldataReaders.readUint8(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#641-647) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#644-646)
CalldataReaders.readUint16(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#650-656) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#653-655)
CalldataReaders.readUint24(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#659-665) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#662-664)
CalldataReaders.readUint32(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#668-674) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#671-673)
CalldataReaders.readUint40(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#677-683) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#680-682)
CalldataReaders.readUint48(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#686-692) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#689-691)
CalldataReaders.readUint56(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#695-701) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#698-700)
CalldataReaders.readUint64(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#704-710) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#707-709)
CalldataReaders.readUint72(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#713-719) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#716-718)
CalldataReaders.readUint80(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#722-728) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#725-727)
CalldataReaders.readUint88(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#731-737) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#734-736)
CalldataReaders.readUint96(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#740-746) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#743-745)
CalldataReaders.readUint104(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#749-755) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#752-754)
CalldataReaders.readUint112(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#758-764) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#761-763)
CalldataReaders.readUint120(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#767-773) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#770-772)
CalldataReaders.readUint128(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#776-782) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#779-781)
CalldataReaders.readUint136(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#785-791) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#788-790)
CalldataReaders.readUint144(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#794-800) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#797-799)
CalldataReaders.readUint152(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#803-809) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#806-808)
CalldataReaders.readUint160(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#812-818) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#815-817)
CalldataReaders.readUint168(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#821-827) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#824-826)
CalldataReaders.readUint176(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#830-836) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#833-835)
CalldataReaders.readUint184(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#839-845) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#842-844)
CalldataReaders.readUint192(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#848-854) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#851-853)
CalldataReaders.readUint200(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#857-863) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#860-862)
CalldataReaders.readUint208(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#866-872) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#869-871)
CalldataReaders.readUint216(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#875-881) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#878-880)
CalldataReaders.readUint224(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#884-890) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#887-889)
CalldataReaders.readUint232(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#893-899) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#896-898)
CalldataReaders.readUint240(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#902-908) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#905-907)
CalldataReaders.readUint248(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#911-917) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#914-916)
CalldataReaders.readUint256(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#920-926) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#923-925)
CalldataReaders.readInt8(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#929-935) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#932-934)
CalldataReaders.readInt16(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#938-944) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#941-943)
CalldataReaders.readInt24(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#947-953) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#950-952)
CalldataReaders.readInt32(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#956-962) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#959-961)
CalldataReaders.readInt40(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#965-971) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#968-970)
CalldataReaders.readInt48(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#974-980) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#977-979)
CalldataReaders.readInt56(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#983-989) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#986-988)
CalldataReaders.readInt64(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#992-998) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#995-997)
CalldataReaders.readInt72(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1001-1007) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1004-1006)
CalldataReaders.readInt80(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1010-1016) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1013-1015)
CalldataReaders.readInt88(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1019-1025) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1022-1024)
CalldataReaders.readInt96(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1028-1034) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1031-1033)
CalldataReaders.readInt104(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1037-1043) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1040-1042)
CalldataReaders.readInt112(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1046-1052) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1049-1051)
CalldataReaders.readInt120(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1055-1061) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1058-1060)
CalldataReaders.readInt128(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1064-1070) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1067-1069)
CalldataReaders.readInt136(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1073-1079) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1076-1078)
CalldataReaders.readInt144(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1082-1088) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1085-1087)
CalldataReaders.readInt152(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1091-1097) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1094-1096)
CalldataReaders.readInt160(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1100-1106) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1103-1105)
CalldataReaders.readInt168(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1109-1115) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1112-1114)
CalldataReaders.readInt176(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1118-1124) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1121-1123)
CalldataReaders.readInt184(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1127-1133) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1130-1132)
CalldataReaders.readInt192(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1136-1142) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1139-1141)
CalldataReaders.readInt200(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1145-1151) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1148-1150)
CalldataReaders.readInt208(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1154-1160) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1157-1159)
CalldataReaders.readInt216(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1163-1169) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1166-1168)
CalldataReaders.readInt224(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1172-1178) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1175-1177)
CalldataReaders.readInt232(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1181-1187) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1184-1186)
CalldataReaders.readInt240(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1190-1196) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1193-1195)
CalldataReaders.readInt248(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1199-1205) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1202-1204)
CalldataReaders.readInt256(CalldataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1208-1214) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1211-1213)
ReturndataReaders.readBool(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1226-1233) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1229-1232)
ReturndataReaders.readAddress(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1236-1243) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1239-1242)
ReturndataReaders.readBytes1(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1246-1253) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1249-1252)
ReturndataReaders.readBytes2(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1256-1263) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1259-1262)
ReturndataReaders.readBytes3(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1266-1273) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1269-1272)
ReturndataReaders.readBytes4(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1276-1283) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1279-1282)
ReturndataReaders.readBytes5(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1286-1293) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1289-1292)
ReturndataReaders.readBytes6(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1296-1303) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1299-1302)
ReturndataReaders.readBytes7(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1306-1313) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1309-1312)
ReturndataReaders.readBytes8(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1316-1323) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1319-1322)
ReturndataReaders.readBytes9(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1326-1333) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1329-1332)
ReturndataReaders.readBytes10(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1336-1343) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1339-1342)
ReturndataReaders.readBytes11(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1346-1353) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1349-1352)
ReturndataReaders.readBytes12(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1356-1363) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1359-1362)
ReturndataReaders.readBytes13(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1366-1373) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1369-1372)
ReturndataReaders.readBytes14(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1376-1383) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1379-1382)
ReturndataReaders.readBytes15(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1386-1393) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1389-1392)
ReturndataReaders.readBytes16(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1396-1403) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1399-1402)
ReturndataReaders.readBytes17(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1406-1413) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1409-1412)
ReturndataReaders.readBytes18(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1416-1423) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1419-1422)
ReturndataReaders.readBytes19(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1426-1433) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1429-1432)
ReturndataReaders.readBytes20(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1436-1443) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1439-1442)
ReturndataReaders.readBytes21(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1446-1453) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1449-1452)
ReturndataReaders.readBytes22(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1456-1463) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1459-1462)
ReturndataReaders.readBytes23(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1466-1473) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1469-1472)
ReturndataReaders.readBytes24(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1476-1483) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1479-1482)
ReturndataReaders.readBytes25(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1486-1493) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1489-1492)
ReturndataReaders.readBytes26(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1496-1503) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1499-1502)
ReturndataReaders.readBytes27(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1506-1513) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1509-1512)
ReturndataReaders.readBytes28(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1516-1523) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1519-1522)
ReturndataReaders.readBytes29(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1526-1533) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1529-1532)
ReturndataReaders.readBytes30(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1536-1543) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1539-1542)
ReturndataReaders.readBytes31(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1546-1553) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1549-1552)
ReturndataReaders.readBytes32(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1556-1563) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1559-1562)
ReturndataReaders.readUint8(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1566-1573) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1569-1572)
ReturndataReaders.readUint16(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1576-1583) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1579-1582)
ReturndataReaders.readUint24(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1586-1593) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1589-1592)
ReturndataReaders.readUint32(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1596-1603) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1599-1602)
ReturndataReaders.readUint40(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1606-1613) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1609-1612)
ReturndataReaders.readUint48(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1616-1623) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1619-1622)
ReturndataReaders.readUint56(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1626-1633) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1629-1632)
ReturndataReaders.readUint64(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1636-1643) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1639-1642)
ReturndataReaders.readUint72(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1646-1653) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1649-1652)
ReturndataReaders.readUint80(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1656-1663) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1659-1662)
ReturndataReaders.readUint88(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1666-1673) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1669-1672)
ReturndataReaders.readUint96(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1676-1683) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1679-1682)
ReturndataReaders.readUint104(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1686-1693) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1689-1692)
ReturndataReaders.readUint112(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1696-1703) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1699-1702)
ReturndataReaders.readUint120(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1706-1713) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1709-1712)
ReturndataReaders.readUint128(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1716-1723) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1719-1722)
ReturndataReaders.readUint136(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1726-1733) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1729-1732)
ReturndataReaders.readUint144(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1736-1743) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1739-1742)
ReturndataReaders.readUint152(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1746-1753) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1749-1752)
ReturndataReaders.readUint160(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1756-1763) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1759-1762)
ReturndataReaders.readUint168(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1766-1773) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1769-1772)
ReturndataReaders.readUint176(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1776-1783) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1779-1782)
ReturndataReaders.readUint184(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1786-1793) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1789-1792)
ReturndataReaders.readUint192(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1796-1803) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1799-1802)
ReturndataReaders.readUint200(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1806-1813) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1809-1812)
ReturndataReaders.readUint208(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1816-1823) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1819-1822)
ReturndataReaders.readUint216(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1826-1833) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1829-1832)
ReturndataReaders.readUint224(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1836-1843) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1839-1842)
ReturndataReaders.readUint232(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1846-1853) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1849-1852)
ReturndataReaders.readUint240(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1856-1863) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1859-1862)
ReturndataReaders.readUint248(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1866-1873) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1869-1872)
ReturndataReaders.readUint256(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1876-1883) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1879-1882)
ReturndataReaders.readInt8(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1886-1893) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1889-1892)
ReturndataReaders.readInt16(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1896-1903) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1899-1902)
ReturndataReaders.readInt24(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1906-1913) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1909-1912)
ReturndataReaders.readInt32(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1916-1923) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1919-1922)
ReturndataReaders.readInt40(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1926-1933) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1929-1932)
ReturndataReaders.readInt48(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1936-1943) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1939-1942)
ReturndataReaders.readInt56(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1946-1953) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1949-1952)
ReturndataReaders.readInt64(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1956-1963) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1959-1962)
ReturndataReaders.readInt72(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1966-1973) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1969-1972)
ReturndataReaders.readInt80(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1976-1983) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1979-1982)
ReturndataReaders.readInt88(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1986-1993) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1989-1992)
ReturndataReaders.readInt96(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1996-2003) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#1999-2002)
ReturndataReaders.readInt104(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2006-2013) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2009-2012)
ReturndataReaders.readInt112(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2016-2023) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2019-2022)
ReturndataReaders.readInt120(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2026-2033) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2029-2032)
ReturndataReaders.readInt128(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2036-2043) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2039-2042)
ReturndataReaders.readInt136(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2046-2053) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2049-2052)
ReturndataReaders.readInt144(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2056-2063) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2059-2062)
ReturndataReaders.readInt152(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2066-2073) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2069-2072)
ReturndataReaders.readInt160(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2076-2083) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2079-2082)
ReturndataReaders.readInt168(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2086-2093) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2089-2092)
ReturndataReaders.readInt176(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2096-2103) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2099-2102)
ReturndataReaders.readInt184(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2106-2113) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2109-2112)
ReturndataReaders.readInt192(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2116-2123) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2119-2122)
ReturndataReaders.readInt200(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2126-2133) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2129-2132)
ReturndataReaders.readInt208(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2136-2143) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2139-2142)
ReturndataReaders.readInt216(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2146-2153) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2149-2152)
ReturndataReaders.readInt224(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2156-2163) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2159-2162)
ReturndataReaders.readInt232(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2166-2173) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2169-2172)
ReturndataReaders.readInt240(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2176-2183) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2179-2182)
ReturndataReaders.readInt248(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2186-2193) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2189-2192)
ReturndataReaders.readInt256(ReturndataPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2196-2203) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2199-2202)
MemoryReaders.readMemoryPointer(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2208-2214) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2211-2213)
MemoryReaders.readBool(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2224-2228) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2225-2227)
MemoryReaders.readAddress(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2231-2237) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2234-2236)
MemoryReaders.readBytes1(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2240-2246) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2243-2245)
MemoryReaders.readBytes2(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2249-2255) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2252-2254)
MemoryReaders.readBytes3(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2258-2264) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2261-2263)
MemoryReaders.readBytes4(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2267-2273) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2270-2272)
MemoryReaders.readBytes5(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2276-2282) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2279-2281)
MemoryReaders.readBytes6(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2285-2291) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2288-2290)
MemoryReaders.readBytes7(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2294-2300) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2297-2299)
MemoryReaders.readBytes8(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2303-2309) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2306-2308)
MemoryReaders.readBytes9(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2312-2318) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2315-2317)
MemoryReaders.readBytes10(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2321-2327) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2324-2326)
MemoryReaders.readBytes11(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2330-2336) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2333-2335)
MemoryReaders.readBytes12(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2339-2345) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2342-2344)
MemoryReaders.readBytes13(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2348-2354) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2351-2353)
MemoryReaders.readBytes14(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2357-2363) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2360-2362)
MemoryReaders.readBytes15(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2366-2372) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2369-2371)
MemoryReaders.readBytes16(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2375-2381) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2378-2380)
MemoryReaders.readBytes17(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2384-2390) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2387-2389)
MemoryReaders.readBytes18(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2393-2399) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2396-2398)
MemoryReaders.readBytes19(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2402-2408) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2405-2407)
MemoryReaders.readBytes20(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2411-2417) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2414-2416)
MemoryReaders.readBytes21(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2420-2426) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2423-2425)
MemoryReaders.readBytes22(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2429-2435) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2432-2434)
MemoryReaders.readBytes23(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2438-2444) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2441-2443)
MemoryReaders.readBytes24(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2447-2453) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2450-2452)
MemoryReaders.readBytes25(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2456-2462) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2459-2461)
MemoryReaders.readBytes26(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2465-2471) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2468-2470)
MemoryReaders.readBytes27(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2474-2480) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2477-2479)
MemoryReaders.readBytes28(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2483-2489) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2486-2488)
MemoryReaders.readBytes29(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2492-2498) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2495-2497)
MemoryReaders.readBytes30(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2501-2507) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2504-2506)
MemoryReaders.readBytes31(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2510-2516) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2513-2515)
MemoryReaders.readBytes32(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2519-2525) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2522-2524)
MemoryReaders.readUint8(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2528-2532) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2529-2531)
MemoryReaders.readUint16(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2535-2541) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2538-2540)
MemoryReaders.readUint24(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2544-2550) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2547-2549)
MemoryReaders.readUint32(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2553-2559) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2556-2558)
MemoryReaders.readUint40(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2562-2568) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2565-2567)
MemoryReaders.readUint48(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2571-2577) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2574-2576)
MemoryReaders.readUint56(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2580-2586) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2583-2585)
MemoryReaders.readUint64(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2589-2595) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2592-2594)
MemoryReaders.readUint72(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2598-2604) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2601-2603)
MemoryReaders.readUint80(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2607-2613) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2610-2612)
MemoryReaders.readUint88(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2616-2622) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2619-2621)
MemoryReaders.readUint96(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2625-2631) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2628-2630)
MemoryReaders.readUint104(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2634-2640) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2637-2639)
MemoryReaders.readUint112(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2643-2649) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2646-2648)
MemoryReaders.readUint120(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2652-2658) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2655-2657)
MemoryReaders.readUint128(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2661-2667) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2664-2666)
MemoryReaders.readUint136(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2670-2676) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2673-2675)
MemoryReaders.readUint144(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2679-2685) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2682-2684)
MemoryReaders.readUint152(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2688-2694) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2691-2693)
MemoryReaders.readUint160(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2697-2703) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2700-2702)
MemoryReaders.readUint168(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2706-2712) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2709-2711)
MemoryReaders.readUint176(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2715-2721) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2718-2720)
MemoryReaders.readUint184(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2724-2730) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2727-2729)
MemoryReaders.readUint192(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2733-2739) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2736-2738)
MemoryReaders.readUint200(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2742-2748) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2745-2747)
MemoryReaders.readUint208(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2751-2757) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2754-2756)
MemoryReaders.readUint216(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2760-2766) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2763-2765)
MemoryReaders.readUint224(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2769-2775) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2772-2774)
MemoryReaders.readUint232(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2778-2784) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2781-2783)
MemoryReaders.readUint240(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2787-2793) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2790-2792)
MemoryReaders.readUint248(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2796-2802) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2799-2801)
MemoryReaders.readUint256(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2805-2811) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2808-2810)
MemoryReaders.readInt8(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2814-2818) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2815-2817)
MemoryReaders.readInt16(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2821-2825) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2822-2824)
MemoryReaders.readInt24(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2828-2832) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2829-2831)
MemoryReaders.readInt32(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2835-2839) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2836-2838)
MemoryReaders.readInt40(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2842-2846) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2843-2845)
MemoryReaders.readInt48(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2849-2853) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2850-2852)
MemoryReaders.readInt56(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2856-2860) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2857-2859)
MemoryReaders.readInt64(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2863-2867) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2864-2866)
MemoryReaders.readInt72(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2870-2874) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2871-2873)
MemoryReaders.readInt80(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2877-2881) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2878-2880)
MemoryReaders.readInt88(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2884-2888) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2885-2887)
MemoryReaders.readInt96(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2891-2895) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2892-2894)
MemoryReaders.readInt104(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2898-2904) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2901-2903)
MemoryReaders.readInt112(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2907-2913) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2910-2912)
MemoryReaders.readInt120(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2916-2922) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2919-2921)
MemoryReaders.readInt128(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2925-2931) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2928-2930)
MemoryReaders.readInt136(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2934-2940) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2937-2939)
MemoryReaders.readInt144(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2943-2949) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2946-2948)
MemoryReaders.readInt152(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2952-2958) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2955-2957)
MemoryReaders.readInt160(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2961-2967) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2964-2966)
MemoryReaders.readInt168(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2970-2976) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2973-2975)
MemoryReaders.readInt176(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2979-2985) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2982-2984)
MemoryReaders.readInt184(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2988-2994) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2991-2993)
MemoryReaders.readInt192(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2997-3003) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3000-3002)
MemoryReaders.readInt200(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3006-3012) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3009-3011)
MemoryReaders.readInt208(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3015-3021) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3018-3020)
MemoryReaders.readInt216(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3024-3030) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3027-3029)
MemoryReaders.readInt224(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3033-3039) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3036-3038)
MemoryReaders.readInt232(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3042-3048) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3045-3047)
MemoryReaders.readInt240(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3051-3057) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3054-3056)
MemoryReaders.readInt248(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3060-3066) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3063-3065)
MemoryReaders.readInt256(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3069-3075) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3072-3074)
MemoryWriters.write(MemoryPointer,MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3080-3084) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3081-3083)
MemoryWriters.write(MemoryPointer,bool) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3087-3091) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3088-3090)
MemoryWriters.write(MemoryPointer,address) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3094-3098) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3095-3097)
MemoryWriters.writeBytes32(MemoryPointer,bytes32) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3102-3106) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3103-3105)
MemoryWriters.write(MemoryPointer,uint256) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3109-3113) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3110-3112)
MemoryWriters.writeInt(MemoryPointer,int256) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3117-3121) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#3118-3120)
StructPointers.toMemoryPointer(OrderComponents) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#307-313) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#310-312)
StructPointers.toCalldataPointer(OrderComponents) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#322-328) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#325-327)
StructPointers.toMemoryPointer(OfferItem) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#337-343) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#340-342)
StructPointers.toCalldataPointer(OfferItem) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#352-358) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#355-357)
StructPointers.toMemoryPointer(ConsiderationItem) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#367-373) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#370-372)
StructPointers.toCalldataPointer(ConsiderationItem) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#382-388) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#385-387)
StructPointers.toMemoryPointer(SpentItem) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#397-403) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#400-402)
StructPointers.toCalldataPointer(SpentItem) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#412-418) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#415-417)
StructPointers.toMemoryPointer(ReceivedItem) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#427-433) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#430-432)
StructPointers.toCalldataPointer(ReceivedItem) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#442-448) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#445-447)
StructPointers.toMemoryPointer(BasicOrderParameters) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#457-463) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#460-462)
StructPointers.toCalldataPointer(BasicOrderParameters) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#472-478) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#475-477)
StructPointers.toMemoryPointer(AdditionalRecipient) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#487-493) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#490-492)
StructPointers.toCalldataPointer(AdditionalRecipient) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#502-508) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#505-507)
StructPointers.toMemoryPointer(OrderParameters) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#517-523) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#520-522)
StructPointers.toCalldataPointer(OrderParameters) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#532-538) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#535-537)
StructPointers.toMemoryPointer(Order) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#547-553) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#550-552)
StructPointers.toCalldataPointer(Order) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#562-568) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#565-567)
StructPointers.toMemoryPointer(AdvancedOrder) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#577-583) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#580-582)
StructPointers.toCalldataPointer(AdvancedOrder) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#592-598) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#595-597)
StructPointers.toMemoryPointer(OrderStatus) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#607-613) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#610-612)
StructPointers.toCalldataPointer(OrderStatus) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#622-628) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#625-627)
StructPointers.toMemoryPointer(CriteriaResolver) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#637-643) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#640-642)
StructPointers.toCalldataPointer(CriteriaResolver) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#652-658) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#655-657)
StructPointers.toMemoryPointer(Fulfillment) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#667-673) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#670-672)
StructPointers.toCalldataPointer(Fulfillment) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#682-688) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#685-687)
StructPointers.toMemoryPointer(FulfillmentComponent) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#697-703) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#700-702)
StructPointers.toCalldataPointer(FulfillmentComponent) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#712-718) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#715-717)
StructPointers.toMemoryPointer(Execution) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#727-733) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#730-732)
StructPointers.toCalldataPointer(Execution) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#742-748) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#745-747)
StructPointers.toMemoryPointer(ZoneParameters) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#757-763) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#760-762)
StructPointers.toCalldataPointer(ZoneParameters) (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#772-778) uses assembly
	- INLINE ASM (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#775-777)
FixedPointMathLib.mulDivDown(uint256,uint256,uint256) (lib/solmate/src/utils/FixedPointMathLib.sol#36-51) uses assembly
	- INLINE ASM (lib/solmate/src/utils/FixedPointMathLib.sol#42-50)
FixedPointMathLib.mulDivUp(uint256,uint256,uint256) (lib/solmate/src/utils/FixedPointMathLib.sol#53-69) uses assembly
	- INLINE ASM (lib/solmate/src/utils/FixedPointMathLib.sol#59-68)
FixedPointMathLib.rpow(uint256,uint256,uint256) (lib/solmate/src/utils/FixedPointMathLib.sol#71-158) uses assembly
	- INLINE ASM (lib/solmate/src/utils/FixedPointMathLib.sol#77-157)
FixedPointMathLib.sqrt(uint256) (lib/solmate/src/utils/FixedPointMathLib.sol#164-227) uses assembly
	- INLINE ASM (lib/solmate/src/utils/FixedPointMathLib.sol#166-226)
FixedPointMathLib.unsafeMod(uint256,uint256) (lib/solmate/src/utils/FixedPointMathLib.sol#229-236) uses assembly
	- INLINE ASM (lib/solmate/src/utils/FixedPointMathLib.sol#231-235)
FixedPointMathLib.unsafeDiv(uint256,uint256) (lib/solmate/src/utils/FixedPointMathLib.sol#238-245) uses assembly
	- INLINE ASM (lib/solmate/src/utils/FixedPointMathLib.sol#240-244)
FixedPointMathLib.unsafeDivUp(uint256,uint256) (lib/solmate/src/utils/FixedPointMathLib.sol#247-254) uses assembly
	- INLINE ASM (lib/solmate/src/utils/FixedPointMathLib.sol#249-253)
SafeTransferLib.safeTransferETH(address,uint256) (lib/solmate/src/utils/SafeTransferLib.sol#15-25) uses assembly
	- INLINE ASM (lib/solmate/src/utils/SafeTransferLib.sol#19-22)
SafeTransferLib.safeTransferFrom(ERC20,address,address,uint256) (lib/solmate/src/utils/SafeTransferLib.sol#31-63) uses assembly
	- INLINE ASM (lib/solmate/src/utils/SafeTransferLib.sol#40-60)
SafeTransferLib.safeTransfer(ERC20,address,uint256) (lib/solmate/src/utils/SafeTransferLib.sol#65-95) uses assembly
	- INLINE ASM (lib/solmate/src/utils/SafeTransferLib.sol#73-92)
SafeTransferLib.safeApprove(ERC20,address,uint256) (lib/solmate/src/utils/SafeTransferLib.sol#97-127) uses assembly
	- INLINE ASM (lib/solmate/src/utils/SafeTransferLib.sol#105-124)
BytesLib.slice(bytes,uint256,uint256) (src/lib/utils/BytesLib.sol#12-70) uses assembly
	- INLINE ASM (src/lib/utils/BytesLib.sol#19-67)
BytesLib.toAddress(bytes,uint256) (src/lib/utils/BytesLib.sol#72-82) uses assembly
	- INLINE ASM (src/lib/utils/BytesLib.sol#77-79)
BytesLib.toUint24(bytes,uint256) (src/lib/utils/BytesLib.sol#84-94) uses assembly
	- INLINE ASM (src/lib/utils/BytesLib.sol#89-91)
ValidatorHelpers.validateTokenIdPackedList(uint256,uint64,bytes) (src/lib/utils/ValidatorHelpers.sol#15-70) uses assembly
	- INLINE ASM (src/lib/utils/ValidatorHelpers.sol#30-68)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage
INFO:Detectors:
Different versions of Solidity are used:
	- Version used: ['>=0.4.22<0.9.0', '>=0.8.0', '>=0.8.13', '^0.8.13', '^0.8.20', '^0.8.21']
	- >=0.4.22<0.9.0 (lib/forge-std/src/console.sol#2)
	- >=0.8.0 (lib/solmate/src/auth/Owned.sol#2)
	- >=0.8.0 (lib/solmate/src/tokens/ERC20.sol#2)
	- >=0.8.0 (lib/solmate/src/tokens/ERC4626.sol#2)
	- >=0.8.0 (lib/solmate/src/tokens/ERC721.sol#2)
	- >=0.8.0 (lib/solmate/src/tokens/WETH.sol#2)
	- >=0.8.0 (lib/solmate/src/utils/FixedPointMathLib.sol#2)
	- >=0.8.0 (lib/solmate/src/utils/ReentrancyGuard.sol#2)
	- >=0.8.0 (lib/solmate/src/utils/SafeTransferLib.sol#2)
	- >=0.8.13 (lib/delegate-registry/src/IDelegateRegistry.sol#2)
	- ^0.8.13 (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2)
	- ^0.8.13 (lib/seaport/lib/seaport-types/src/lib/ConsiderationEnums.sol#2)
	- ^0.8.13 (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#2)
	- ^0.8.20 (lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol#4)
	- ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/Panic.sol#3)
	- ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/Strings.sol#4)
	- ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol#4)
	- ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol#4)
	- ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#4)
	- ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol#5)
	- ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol#4)
	- ^0.8.20 (lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol#5)
	- ^0.8.20 (src/interfaces/IAuctionLoanLiquidator.sol#2)
	- ^0.8.20 (src/interfaces/ILiquidationDistributor.sol#2)
	- ^0.8.20 (src/interfaces/ILoanLiquidator.sol#2)
	- ^0.8.20 (src/interfaces/IMulticall.sol#2)
	- ^0.8.20 (src/interfaces/INFTFlashAction.sol#2)
	- ^0.8.20 (src/interfaces/IUserVault.sol#2)
	- ^0.8.20 (src/interfaces/callbacks/ILoanCallback.sol#3)
	- ^0.8.20 (src/interfaces/callbacks/IPurchaseBundler.sol#3)
	- ^0.8.20 (src/interfaces/external/ICryptoPunksMarket.sol#3)
	- ^0.8.20 (src/interfaces/external/IReservoir.sol#3)
	- ^0.8.20 (src/interfaces/external/IWrappedPunk.sol#3)
	- ^0.8.20 (src/interfaces/loans/IBaseLoan.sol#2)
	- ^0.8.20 (src/interfaces/loans/ILoanManagerRegistry.sol#2)
	- ^0.8.20 (src/interfaces/validators/IOfferValidator.sol#2)
	- ^0.8.21 (src/interfaces/ILiquidationHandler.sol#2)
	- ^0.8.21 (src/interfaces/IOldERC721.sol#2)
	- ^0.8.21 (src/interfaces/external/IAaveLendingPool.sol#2)
	- ^0.8.21 (src/interfaces/external/ICurve.sol#3)
	- ^0.8.21 (src/interfaces/external/ILido.sol#2)
	- ^0.8.21 (src/interfaces/loans/ILoanManager.sol#2)
	- ^0.8.21 (src/interfaces/loans/IMultiSourceLoan.sol#2)
	- ^0.8.21 (src/interfaces/pools/IBaseInterestAllocator.sol#2)
	- ^0.8.21 (src/interfaces/pools/IFeeManager.sol#2)
	- ^0.8.21 (src/interfaces/pools/IPool.sol#2)
	- ^0.8.21 (src/interfaces/pools/IPoolOfferHandler.sol#2)
	- ^0.8.21 (src/interfaces/pools/IPoolWithWithdrawalQueues.sol#2)
	- ^0.8.21 (src/lib/AddressManager.sol#2)
	- ^0.8.21 (src/lib/AuctionLoanLiquidator.sol#2)
	- ^0.8.21 (src/lib/AuctionWithBuyoutLoanLiquidator.sol#2)
	- ^0.8.21 (src/lib/InputChecker.sol#2)
	- ^0.8.21 (src/lib/LiquidationDistributor.sol#2)
	- ^0.8.21 (src/lib/LiquidationHandler.sol#2)
	- ^0.8.21 (src/lib/Multicall.sol#2)
	- ^0.8.21 (src/lib/UserVault.sol#2)
	- ^0.8.21 (src/lib/callbacks/CallbackHandler.sol#2)
	- ^0.8.21 (src/lib/callbacks/PurchaseBundler.sol#2)
	- ^0.8.21 (src/lib/loans/BaseLoan.sol#2)
	- ^0.8.21 (src/lib/loans/BaseLoanHelpers.sol#2)
	- ^0.8.21 (src/lib/loans/LoanManager.sol#2)
	- ^0.8.21 (src/lib/loans/LoanManagerRegistry.sol#2)
	- ^0.8.21 (src/lib/loans/MultiSourceLoan.sol#2)
	- ^0.8.21 (src/lib/loans/WithLoanManagers.sol#2)
	- ^0.8.21 (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#2)
	- ^0.8.21 (src/lib/pools/FeeManager.sol#2)
	- ^0.8.21 (src/lib/pools/LidoEthBaseInterestAllocator.sol#2)
	- ^0.8.21 (src/lib/pools/Pool.sol#2)
	- ^0.8.21 (src/lib/pools/PoolOfferHandler.sol#2)
	- ^0.8.21 (src/lib/pools/WithdrawalQueue.sol#2)
	- ^0.8.21 (src/lib/utils/BytesLib.sol#9)
	- ^0.8.21 (src/lib/utils/Hash.sol#2)
	- ^0.8.21 (src/lib/utils/Interest.sol#2)
	- ^0.8.21 (src/lib/utils/TwoStepOwned.sol#1)
	- ^0.8.21 (src/lib/utils/ValidatorHelpers.sol#2)
	- ^0.8.21 (src/lib/utils/WithProtocolFee.sol#2)
	- ^0.8.21 (src/lib/validators/NftBitVectorValidator.sol#2)
	- ^0.8.21 (src/lib/validators/NftPackedListValidator.sol#2)
	- ^0.8.21 (src/lib/validators/RangeValidator.sol#2)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used
INFO:Detectors:
AddressManager._add(address) (src/lib/AddressManager.sol#84-99) has costly operations inside a loop:
	- ++ _lastAdded (src/lib/AddressManager.sol#90)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#costly-operations-inside-a-loop
INFO:Detectors:
getFreeMemoryPointer() (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#39-41) is never used and should be removed
malloc(uint256) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#30-35) is never used and should be removed
setFreeMemoryPointer(MemoryPointer) (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#45-47) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code
INFO:Detectors:
Pragma version>=0.8.13 (lib/delegate-registry/src/IDelegateRegistry.sol#2) allows old versions
Pragma version>=0.4.22<0.9.0 (lib/forge-std/src/console.sol#2) is too complex
Pragma version^0.8.20 (lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol#4) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (lib/openzeppelin-contracts/contracts/utils/Panic.sol#3) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (lib/openzeppelin-contracts/contracts/utils/Strings.sol#4) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol#4) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol#4) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (lib/openzeppelin-contracts/contracts/utils/math/Math.sol#4) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol#5) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol#4) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol#5) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.13 (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#2) allows old versions
Pragma version^0.8.13 (lib/seaport/lib/seaport-types/src/lib/ConsiderationEnums.sol#2) allows old versions
Pragma version^0.8.13 (lib/seaport/lib/seaport-types/src/lib/ConsiderationStructs.sol#2) allows old versions
Pragma version>=0.8.0 (lib/solmate/src/auth/Owned.sol#2) allows old versions
Pragma version>=0.8.0 (lib/solmate/src/tokens/ERC20.sol#2) allows old versions
Pragma version>=0.8.0 (lib/solmate/src/tokens/ERC4626.sol#2) allows old versions
Pragma version>=0.8.0 (lib/solmate/src/tokens/ERC721.sol#2) allows old versions
Pragma version>=0.8.0 (lib/solmate/src/tokens/WETH.sol#2) allows old versions
Pragma version>=0.8.0 (lib/solmate/src/utils/FixedPointMathLib.sol#2) allows old versions
Pragma version>=0.8.0 (lib/solmate/src/utils/ReentrancyGuard.sol#2) allows old versions
Pragma version>=0.8.0 (lib/solmate/src/utils/SafeTransferLib.sol#2) allows old versions
Pragma version^0.8.20 (src/interfaces/IAuctionLoanLiquidator.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (src/interfaces/ILiquidationDistributor.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/interfaces/ILiquidationHandler.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (src/interfaces/ILoanLiquidator.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (src/interfaces/IMulticall.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (src/interfaces/INFTFlashAction.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/interfaces/IOldERC721.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (src/interfaces/IUserVault.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (src/interfaces/callbacks/ILoanCallback.sol#3) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (src/interfaces/callbacks/IPurchaseBundler.sol#3) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/interfaces/external/IAaveLendingPool.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (src/interfaces/external/ICryptoPunksMarket.sol#3) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/interfaces/external/ICurve.sol#3) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/interfaces/external/ILido.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (src/interfaces/external/IReservoir.sol#3) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (src/interfaces/external/IWrappedPunk.sol#3) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (src/interfaces/loans/IBaseLoan.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/interfaces/loans/ILoanManager.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (src/interfaces/loans/ILoanManagerRegistry.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/interfaces/loans/IMultiSourceLoan.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/interfaces/pools/IBaseInterestAllocator.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/interfaces/pools/IFeeManager.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/interfaces/pools/IPool.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/interfaces/pools/IPoolOfferHandler.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/interfaces/pools/IPoolWithWithdrawalQueues.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.20 (src/interfaces/validators/IOfferValidator.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/AddressManager.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/AuctionLoanLiquidator.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/AuctionWithBuyoutLoanLiquidator.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/InputChecker.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/LiquidationDistributor.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/LiquidationHandler.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/Multicall.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/UserVault.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/callbacks/CallbackHandler.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/callbacks/PurchaseBundler.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/loans/BaseLoan.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/loans/BaseLoanHelpers.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/loans/LoanManager.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/loans/LoanManagerRegistry.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/loans/MultiSourceLoan.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/loans/WithLoanManagers.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/pools/FeeManager.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/pools/LidoEthBaseInterestAllocator.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/pools/Pool.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/pools/PoolOfferHandler.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/pools/WithdrawalQueue.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/utils/BytesLib.sol#9) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/utils/Hash.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/utils/Interest.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/utils/TwoStepOwned.sol#1) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/utils/ValidatorHelpers.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/utils/WithProtocolFee.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/validators/NftBitVectorValidator.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/validators/NftPackedListValidator.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
Pragma version^0.8.21 (src/lib/validators/RangeValidator.sol#2) necessitates a version too recent to be trusted. Consider deploying with 0.8.18.
solc-0.8.21 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
INFO:Detectors:
Low level call in Multicall.multicall(bytes[]) (src/lib/Multicall.sol#10-21):
	- (success,results[i]) = address(this).delegatecall(data[i]) (src/lib/Multicall.sol#15)
Low level call in UserVault._withdrawEth(uint256) (src/lib/UserVault.sol#362-375):
	- (sent) = address(msg.sender).call{value: amount}() (src/lib/UserVault.sol#369)
Low level call in PurchaseBundler.buy(bytes[]) (src/lib/callbacks/PurchaseBundler.sol#100-125):
	- (success) = address(msg.sender).call{value: remainingBalance}() (src/lib/callbacks/PurchaseBundler.sol#118)
Low level call in PurchaseBundler.afterPrincipalTransfer(IMultiSourceLoan.Loan,uint256,bytes) (src/lib/callbacks/PurchaseBundler.sol#144-178):
	- (success) = executionInfo.module.call{value: executionInfo.value}(executionInfo.data) (src/lib/callbacks/PurchaseBundler.sol#161)
Low level call in PurchaseBundler.afterNFTTransfer(IMultiSourceLoan.Loan,bytes) (src/lib/callbacks/PurchaseBundler.sol#182-226):
	- (success,None) = executionInfo.module.call(executionInfo.data) (src/lib/callbacks/PurchaseBundler.sol#201)
	- (success,None) = executionInfo.module.call(executionInfo.data) (src/lib/callbacks/PurchaseBundler.sol#209)
	- (success,None) = executionInfo.module.call(executionInfo.data) (src/lib/callbacks/PurchaseBundler.sol#214)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls
INFO:Detectors:
WithLoanManagers (src/lib/loans/WithLoanManagers.sol#6-29) should inherit from ILoanManagerRegistry (src/interfaces/loans/ILoanManagerRegistry.sol#7-20)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-inheritance
INFO:Detectors:
Contract console (lib/forge-std/src/console.sol#4-1534) is not in CapWords
Parameter CalldataPointerLib.offset(CalldataPointer,uint256)._offset (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#116) is not in mixedCase
Parameter ReturndataPointerLib.offset(ReturndataPointer,uint256)._offset (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#203) is not in mixedCase
Parameter MemoryPointerLib.offset(MemoryPointer,uint256)._offset (lib/seaport/lib/seaport-types/src/helpers/PointerLibraries.sol#298) is not in mixedCase
Function ERC20.DOMAIN_SEPARATOR() (lib/solmate/src/tokens/ERC20.sol#162-164) is not in mixedCase
Variable ERC20.INITIAL_CHAIN_ID (lib/solmate/src/tokens/ERC20.sol#41) is not in mixedCase
Variable ERC20.INITIAL_DOMAIN_SEPARATOR (lib/solmate/src/tokens/ERC20.sol#43) is not in mixedCase
Function IUserVault.ERC721OwnerOf(address,uint256) (src/interfaces/IUserVault.sol#28) is not in mixedCase
Function IUserVault.ERC20BalanceOf(uint256,address) (src/interfaces/IUserVault.sol#34) is not in mixedCase
Parameter ICurve.exchange(uint128,uint128,uint256,uint256)._min_dy (src/interfaces/external/ICurve.sol#9) is not in mixedCase
Function IFeeManager.PRECISION() (src/interfaces/pools/IFeeManager.sol#14) is not in mixedCase
Parameter AddressManager.add(address)._entry (src/lib/AddressManager.sol#43) is not in mixedCase
Parameter AddressManager.addToWhitelist(address)._entry (src/lib/AddressManager.sol#48) is not in mixedCase
Parameter AddressManager.removeFromWhitelist(address)._entry (src/lib/AddressManager.sol#60) is not in mixedCase
Parameter AddressManager.addressToIndex(address)._address (src/lib/AddressManager.sol#68) is not in mixedCase
Parameter AddressManager.indexToAddress(uint16)._index (src/lib/AddressManager.sol#74) is not in mixedCase
Parameter AddressManager.isWhitelisted(address)._entry (src/lib/AddressManager.sol#80) is not in mixedCase
Parameter AuctionLoanLiquidator.addLoanContract(address)._loanContract (src/lib/AuctionLoanLiquidator.sol#126) is not in mixedCase
Parameter AuctionLoanLiquidator.removeLoanContract(address)._loanContract (src/lib/AuctionLoanLiquidator.sol#135) is not in mixedCase
Parameter AuctionLoanLiquidator.updateLiquidationDistributor(address).__liquidationDistributor (src/lib/AuctionLoanLiquidator.sol#149) is not in mixedCase
Parameter AuctionLoanLiquidator.liquidateLoan(uint256,address,uint256,address,uint96,address)._loanId (src/lib/AuctionLoanLiquidator.sol#174) is not in mixedCase
Parameter AuctionLoanLiquidator.liquidateLoan(uint256,address,uint256,address,uint96,address)._nftAddress (src/lib/AuctionLoanLiquidator.sol#175) is not in mixedCase
Parameter AuctionLoanLiquidator.liquidateLoan(uint256,address,uint256,address,uint96,address)._tokenId (src/lib/AuctionLoanLiquidator.sol#176) is not in mixedCase
Parameter AuctionLoanLiquidator.liquidateLoan(uint256,address,uint256,address,uint96,address)._asset (src/lib/AuctionLoanLiquidator.sol#177) is not in mixedCase
Parameter AuctionLoanLiquidator.liquidateLoan(uint256,address,uint256,address,uint96,address)._duration (src/lib/AuctionLoanLiquidator.sol#178) is not in mixedCase
Parameter AuctionLoanLiquidator.liquidateLoan(uint256,address,uint256,address,uint96,address)._originator (src/lib/AuctionLoanLiquidator.sol#179) is not in mixedCase
Parameter AuctionLoanLiquidator.placeBid(address,uint256,IAuctionLoanLiquidator.Auction,uint256)._nftAddress (src/lib/AuctionLoanLiquidator.sol#222) is not in mixedCase
Parameter AuctionLoanLiquidator.placeBid(address,uint256,IAuctionLoanLiquidator.Auction,uint256)._tokenId (src/lib/AuctionLoanLiquidator.sol#222) is not in mixedCase
Parameter AuctionLoanLiquidator.placeBid(address,uint256,IAuctionLoanLiquidator.Auction,uint256)._auction (src/lib/AuctionLoanLiquidator.sol#222) is not in mixedCase
Parameter AuctionLoanLiquidator.placeBid(address,uint256,IAuctionLoanLiquidator.Auction,uint256)._bid (src/lib/AuctionLoanLiquidator.sol#222) is not in mixedCase
Parameter AuctionLoanLiquidator.settleAuction(IAuctionLoanLiquidator.Auction,IMultiSourceLoan.Loan)._auction (src/lib/AuctionLoanLiquidator.sol#261) is not in mixedCase
Parameter AuctionLoanLiquidator.settleAuction(IAuctionLoanLiquidator.Auction,IMultiSourceLoan.Loan)._loan (src/lib/AuctionLoanLiquidator.sol#261) is not in mixedCase
Parameter AuctionLoanLiquidator.getAuctionHash(address,uint256)._nftAddress (src/lib/AuctionLoanLiquidator.sol#306) is not in mixedCase
Parameter AuctionLoanLiquidator.getAuctionHash(address,uint256)._tokenId (src/lib/AuctionLoanLiquidator.sol#306) is not in mixedCase
Parameter AuctionWithBuyoutLoanLiquidator.settleWithBuyout(address,uint256,IAuctionLoanLiquidator.Auction,IMultiSourceLoan.Loan)._nftAddress (src/lib/AuctionWithBuyoutLoanLiquidator.sol#56) is not in mixedCase
Parameter AuctionWithBuyoutLoanLiquidator.settleWithBuyout(address,uint256,IAuctionLoanLiquidator.Auction,IMultiSourceLoan.Loan)._tokenId (src/lib/AuctionWithBuyoutLoanLiquidator.sol#57) is not in mixedCase
Parameter AuctionWithBuyoutLoanLiquidator.settleWithBuyout(address,uint256,IAuctionLoanLiquidator.Auction,IMultiSourceLoan.Loan)._auction (src/lib/AuctionWithBuyoutLoanLiquidator.sol#58) is not in mixedCase
Parameter AuctionWithBuyoutLoanLiquidator.settleWithBuyout(address,uint256,IAuctionLoanLiquidator.Auction,IMultiSourceLoan.Loan)._loan (src/lib/AuctionWithBuyoutLoanLiquidator.sol#59) is not in mixedCase
Parameter AuctionWithBuyoutLoanLiquidator.setTimeForMainLenderToBuy(uint256).__timeForMainLenderToBuy (src/lib/AuctionWithBuyoutLoanLiquidator.sol#108) is not in mixedCase
Parameter LiquidationDistributor.distribute(uint256,IMultiSourceLoan.Loan)._proceeds (src/lib/LiquidationDistributor.sol#32) is not in mixedCase
Parameter LiquidationDistributor.distribute(uint256,IMultiSourceLoan.Loan)._loan (src/lib/LiquidationDistributor.sol#32) is not in mixedCase
Parameter LiquidationHandler.updateLiquidationContract(address).__loanLiquidator (src/lib/LiquidationHandler.sol#64) is not in mixedCase
Parameter LiquidationHandler.updateLiquidationAuctionDuration(uint48)._newDuration (src/lib/LiquidationHandler.sol#72) is not in mixedCase
Parameter UserVault.tokenURI(uint256)._vaultId (src/lib/UserVault.sol#105) is not in mixedCase
Parameter UserVault.burn(uint256,address)._vaultId (src/lib/UserVault.sol#120) is not in mixedCase
Parameter UserVault.burn(uint256,address)._assetRecipient (src/lib/UserVault.sol#120) is not in mixedCase
Parameter UserVault.burnAndWithdraw(uint256,address[],uint256[],address[])._vaultId (src/lib/UserVault.sol#126) is not in mixedCase
Parameter UserVault.burnAndWithdraw(uint256,address[],uint256[],address[])._collections (src/lib/UserVault.sol#127) is not in mixedCase
Parameter UserVault.burnAndWithdraw(uint256,address[],uint256[],address[])._tokenIds (src/lib/UserVault.sol#128) is not in mixedCase
Parameter UserVault.burnAndWithdraw(uint256,address[],uint256[],address[])._tokens (src/lib/UserVault.sol#129) is not in mixedCase
Function UserVault.ERC721OwnerOf(address,uint256) (src/lib/UserVault.sol#147-149) is not in mixedCase
Parameter UserVault.ERC721OwnerOf(address,uint256)._collection (src/lib/UserVault.sol#147) is not in mixedCase
Parameter UserVault.ERC721OwnerOf(address,uint256)._tokenId (src/lib/UserVault.sol#147) is not in mixedCase
Function UserVault.OldERC721OwnerOf(address,uint256) (src/lib/UserVault.sol#151-153) is not in mixedCase
Parameter UserVault.OldERC721OwnerOf(address,uint256)._collection (src/lib/UserVault.sol#151) is not in mixedCase
Parameter UserVault.OldERC721OwnerOf(address,uint256)._tokenId (src/lib/UserVault.sol#151) is not in mixedCase
Function UserVault.ERC20BalanceOf(uint256,address) (src/lib/UserVault.sol#155-157) is not in mixedCase
Parameter UserVault.ERC20BalanceOf(uint256,address)._vaultId (src/lib/UserVault.sol#155) is not in mixedCase
Parameter UserVault.ERC20BalanceOf(uint256,address)._token (src/lib/UserVault.sol#155) is not in mixedCase
Parameter UserVault.depositERC721(uint256,address,uint256)._vaultId (src/lib/UserVault.sol#160) is not in mixedCase
Parameter UserVault.depositERC721(uint256,address,uint256)._collection (src/lib/UserVault.sol#160) is not in mixedCase
Parameter UserVault.depositERC721(uint256,address,uint256)._tokenId (src/lib/UserVault.sol#160) is not in mixedCase
Parameter UserVault.depositERC721s(uint256,address,uint256[])._vaultId (src/lib/UserVault.sol#169) is not in mixedCase
Parameter UserVault.depositERC721s(uint256,address,uint256[])._collection (src/lib/UserVault.sol#169) is not in mixedCase
Parameter UserVault.depositERC721s(uint256,address,uint256[])._tokenIds (src/lib/UserVault.sol#169) is not in mixedCase
Parameter UserVault.depositOldERC721(uint256,address,uint256)._vaultId (src/lib/UserVault.sol#185) is not in mixedCase
Parameter UserVault.depositOldERC721(uint256,address,uint256)._collection (src/lib/UserVault.sol#185) is not in mixedCase
Parameter UserVault.depositOldERC721(uint256,address,uint256)._tokenId (src/lib/UserVault.sol#185) is not in mixedCase
Parameter UserVault.depositOldERC721s(uint256,address,uint256[])._vaultId (src/lib/UserVault.sol#193) is not in mixedCase
Parameter UserVault.depositOldERC721s(uint256,address,uint256[])._collection (src/lib/UserVault.sol#193) is not in mixedCase
Parameter UserVault.depositOldERC721s(uint256,address,uint256[])._tokenIds (src/lib/UserVault.sol#193) is not in mixedCase
Parameter UserVault.depositERC20(uint256,address,uint256)._vaultId (src/lib/UserVault.sol#210) is not in mixedCase
Parameter UserVault.depositERC20(uint256,address,uint256)._token (src/lib/UserVault.sol#210) is not in mixedCase
Parameter UserVault.depositERC20(uint256,address,uint256)._amount (src/lib/UserVault.sol#210) is not in mixedCase
Parameter UserVault.depositEth(uint256)._vaultId (src/lib/UserVault.sol#219) is not in mixedCase
Parameter UserVault.withdrawERC721(uint256,address,uint256)._vaultId (src/lib/UserVault.sol#226) is not in mixedCase
Parameter UserVault.withdrawERC721(uint256,address,uint256)._collection (src/lib/UserVault.sol#226) is not in mixedCase
Parameter UserVault.withdrawERC721(uint256,address,uint256)._tokenId (src/lib/UserVault.sol#226) is not in mixedCase
Parameter UserVault.withdrawERC721s(uint256,address[],uint256[])._vaultId (src/lib/UserVault.sol#231) is not in mixedCase
Parameter UserVault.withdrawERC721s(uint256,address[],uint256[])._collections (src/lib/UserVault.sol#231) is not in mixedCase
Parameter UserVault.withdrawERC721s(uint256,address[],uint256[])._tokenIds (src/lib/UserVault.sol#231) is not in mixedCase
Parameter UserVault.withdrawOldERC721(uint256,address,uint256)._vaultId (src/lib/UserVault.sol#246) is not in mixedCase
Parameter UserVault.withdrawOldERC721(uint256,address,uint256)._collection (src/lib/UserVault.sol#246) is not in mixedCase
Parameter UserVault.withdrawOldERC721(uint256,address,uint256)._tokenId (src/lib/UserVault.sol#246) is not in mixedCase
Parameter UserVault.withdrawOldERC721s(uint256,address[],uint256[])._vaultId (src/lib/UserVault.sol#251) is not in mixedCase
Parameter UserVault.withdrawOldERC721s(uint256,address[],uint256[])._collections (src/lib/UserVault.sol#251) is not in mixedCase
Parameter UserVault.withdrawOldERC721s(uint256,address[],uint256[])._tokenIds (src/lib/UserVault.sol#251) is not in mixedCase
Parameter UserVault.withdrawERC20(uint256,address)._vaultId (src/lib/UserVault.sol#266) is not in mixedCase
Parameter UserVault.withdrawERC20(uint256,address)._token (src/lib/UserVault.sol#266) is not in mixedCase
Parameter UserVault.withdrawERC20s(uint256,address[])._vaultId (src/lib/UserVault.sol#271) is not in mixedCase
Parameter UserVault.withdrawERC20s(uint256,address[])._tokens (src/lib/UserVault.sol#271) is not in mixedCase
Parameter UserVault.withdrawEth(uint256)._vaultId (src/lib/UserVault.sol#281) is not in mixedCase
Parameter CallbackHandler.addWhitelistedCallbackContract(address)._contract (src/lib/callbacks/CallbackHandler.sol#27) is not in mixedCase
Parameter CallbackHandler.removeWhitelistedCallbackContract(address)._contract (src/lib/callbacks/CallbackHandler.sol#36) is not in mixedCase
Parameter CallbackHandler.isWhitelistedCallbackContract(address)._contract (src/lib/callbacks/CallbackHandler.sol#43) is not in mixedCase
Parameter CallbackHandler.handleAfterPrincipalTransferCallback(IMultiSourceLoan.Loan,address,bytes,uint256)._loan (src/lib/callbacks/CallbackHandler.sol#53) is not in mixedCase
Parameter CallbackHandler.handleAfterPrincipalTransferCallback(IMultiSourceLoan.Loan,address,bytes,uint256)._callbackAddress (src/lib/callbacks/CallbackHandler.sol#54) is not in mixedCase
Parameter CallbackHandler.handleAfterPrincipalTransferCallback(IMultiSourceLoan.Loan,address,bytes,uint256)._callbackData (src/lib/callbacks/CallbackHandler.sol#55) is not in mixedCase
Parameter CallbackHandler.handleAfterPrincipalTransferCallback(IMultiSourceLoan.Loan,address,bytes,uint256)._fee (src/lib/callbacks/CallbackHandler.sol#56) is not in mixedCase
Parameter CallbackHandler.handleAfterNFTTransferCallback(IMultiSourceLoan.Loan,address,bytes)._loan (src/lib/callbacks/CallbackHandler.sol#72) is not in mixedCase
Parameter CallbackHandler.handleAfterNFTTransferCallback(IMultiSourceLoan.Loan,address,bytes)._callbackAddress (src/lib/callbacks/CallbackHandler.sol#73) is not in mixedCase
Parameter CallbackHandler.handleAfterNFTTransferCallback(IMultiSourceLoan.Loan,address,bytes)._callbackData (src/lib/callbacks/CallbackHandler.sol#74) is not in mixedCase
Parameter PurchaseBundler.buy(bytes[])._executionData (src/lib/callbacks/PurchaseBundler.sol#100) is not in mixedCase
Parameter PurchaseBundler.sell(bytes[])._executionData (src/lib/callbacks/PurchaseBundler.sol#129) is not in mixedCase
Parameter PurchaseBundler.afterPrincipalTransfer(IMultiSourceLoan.Loan,uint256,bytes)._loan (src/lib/callbacks/PurchaseBundler.sol#144) is not in mixedCase
Parameter PurchaseBundler.afterPrincipalTransfer(IMultiSourceLoan.Loan,uint256,bytes)._fee (src/lib/callbacks/PurchaseBundler.sol#144) is not in mixedCase
Parameter PurchaseBundler.afterPrincipalTransfer(IMultiSourceLoan.Loan,uint256,bytes)._executionData (src/lib/callbacks/PurchaseBundler.sol#144) is not in mixedCase
Parameter PurchaseBundler.afterNFTTransfer(IMultiSourceLoan.Loan,bytes)._loan (src/lib/callbacks/PurchaseBundler.sol#182) is not in mixedCase
Parameter PurchaseBundler.afterNFTTransfer(IMultiSourceLoan.Loan,bytes)._executionData (src/lib/callbacks/PurchaseBundler.sol#182) is not in mixedCase
Parameter PurchaseBundler.updateMultiSourceLoanAddressFirst(address)._newAddress (src/lib/callbacks/PurchaseBundler.sol#229) is not in mixedCase
Parameter PurchaseBundler.finalUpdateMultiSourceLoanAddress(address)._newAddress (src/lib/callbacks/PurchaseBundler.sol#238) is not in mixedCase
Parameter PurchaseBundler.updateTaxes(IPurchaseBundler.Taxes)._newTaxes (src/lib/callbacks/PurchaseBundler.sol#270) is not in mixedCase
Function BaseLoan.DOMAIN_SEPARATOR() (src/lib/loans/BaseLoan.sol#130-132) is not in mixedCase
Parameter BaseLoan.updateImprovementMinimum(IBaseLoan.ImprovementMinimum)._newMinimum (src/lib/loans/BaseLoan.sol#142) is not in mixedCase
Parameter BaseLoan.cancelOffer(uint256)._offerId (src/lib/loans/BaseLoan.sol#159) is not in mixedCase
Parameter BaseLoan.cancelAllOffers(uint256)._minOfferId (src/lib/loans/BaseLoan.sol#167) is not in mixedCase
Parameter BaseLoan.cancelRenegotiationOffer(uint256)._renegotiationId (src/lib/loans/BaseLoan.sol#179) is not in mixedCase
Parameter BaseLoan.getUsedCapacity(address,uint256)._lender (src/lib/loans/BaseLoan.sol#190) is not in mixedCase
Parameter BaseLoan.getUsedCapacity(address,uint256)._offerId (src/lib/loans/BaseLoan.sol#190) is not in mixedCase
Variable BaseLoan.INITIAL_CHAIN_ID (src/lib/loans/BaseLoan.sol#29) is not in mixedCase
Variable BaseLoan.INITIAL_DOMAIN_SEPARATOR (src/lib/loans/BaseLoan.sol#30) is not in mixedCase
Parameter LoanManager.requestAddCallers(LoanManager.PendingCaller[])._callers (src/lib/loans/LoanManager.sol#66) is not in mixedCase
Parameter LoanManager.addCallers(LoanManager.PendingCaller[])._callers (src/lib/loans/LoanManager.sol#76) is not in mixedCase
Parameter LoanManager.isCallerAccepted(address)._caller (src/lib/loans/LoanManager.sol#102) is not in mixedCase
Parameter LoanManager.setUnderwriter(address).__underwriter (src/lib/loans/LoanManager.sol#108) is not in mixedCase
Parameter LoanManager.confirmUnderwriter(address).__underwriter (src/lib/loans/LoanManager.sol#119) is not in mixedCase
Variable LoanManager.UPDATE_WAITING_TIME (src/lib/loans/LoanManager.sol#20) is not in mixedCase
Parameter LoanManagerRegistry.addLoanManager(address)._loanManager (src/lib/loans/LoanManagerRegistry.sol#16) is not in mixedCase
Parameter LoanManagerRegistry.removeLoanManager(address)._loanManager (src/lib/loans/LoanManagerRegistry.sol#22) is not in mixedCase
Parameter LoanManagerRegistry.isLoanManager(address)._loanManager (src/lib/loans/LoanManagerRegistry.sol#28) is not in mixedCase
Parameter MultiSourceLoan.emitLoan(IMultiSourceLoan.LoanExecutionData)._loanExecutionData (src/lib/loans/MultiSourceLoan.sol#124) is not in mixedCase
Parameter MultiSourceLoan.refinanceFull(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan,bytes)._renegotiationOffer (src/lib/loans/MultiSourceLoan.sol#163) is not in mixedCase
Parameter MultiSourceLoan.refinanceFull(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan,bytes)._loan (src/lib/loans/MultiSourceLoan.sol#164) is not in mixedCase
Parameter MultiSourceLoan.refinanceFull(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan,bytes)._renegotiationOfferSignature (src/lib/loans/MultiSourceLoan.sol#165) is not in mixedCase
Parameter MultiSourceLoan.refinancePartial(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan)._renegotiationOffer (src/lib/loans/MultiSourceLoan.sol#235) is not in mixedCase
Parameter MultiSourceLoan.refinancePartial(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan)._loan (src/lib/loans/MultiSourceLoan.sol#235) is not in mixedCase
Parameter MultiSourceLoan.refinanceFromLoanExecutionData(uint256,IMultiSourceLoan.Loan,IMultiSourceLoan.LoanExecutionData)._loanId (src/lib/loans/MultiSourceLoan.sol#307) is not in mixedCase
Parameter MultiSourceLoan.refinanceFromLoanExecutionData(uint256,IMultiSourceLoan.Loan,IMultiSourceLoan.LoanExecutionData)._loan (src/lib/loans/MultiSourceLoan.sol#308) is not in mixedCase
Parameter MultiSourceLoan.refinanceFromLoanExecutionData(uint256,IMultiSourceLoan.Loan,IMultiSourceLoan.LoanExecutionData)._loanExecutionData (src/lib/loans/MultiSourceLoan.sol#309) is not in mixedCase
Parameter MultiSourceLoan.addNewTranche(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan,bytes)._renegotiationOffer (src/lib/loans/MultiSourceLoan.sol#350) is not in mixedCase
Parameter MultiSourceLoan.addNewTranche(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan,bytes)._loan (src/lib/loans/MultiSourceLoan.sol#351) is not in mixedCase
Parameter MultiSourceLoan.addNewTranche(IMultiSourceLoan.RenegotiationOffer,IMultiSourceLoan.Loan,bytes)._renegotiationOfferSignature (src/lib/loans/MultiSourceLoan.sol#352) is not in mixedCase
Parameter MultiSourceLoan.mergeTranches(uint256,IMultiSourceLoan.Loan,uint256,uint256)._loanId (src/lib/loans/MultiSourceLoan.sol#389) is not in mixedCase
Parameter MultiSourceLoan.mergeTranches(uint256,IMultiSourceLoan.Loan,uint256,uint256)._loan (src/lib/loans/MultiSourceLoan.sol#389) is not in mixedCase
Parameter MultiSourceLoan.mergeTranches(uint256,IMultiSourceLoan.Loan,uint256,uint256)._minTranche (src/lib/loans/MultiSourceLoan.sol#389) is not in mixedCase
Parameter MultiSourceLoan.mergeTranches(uint256,IMultiSourceLoan.Loan,uint256,uint256)._maxTranche (src/lib/loans/MultiSourceLoan.sol#389) is not in mixedCase
Parameter MultiSourceLoan.repayLoan(IMultiSourceLoan.LoanRepaymentData)._repaymentData (src/lib/loans/MultiSourceLoan.sol#405) is not in mixedCase
Parameter MultiSourceLoan.liquidateLoan(uint256,IMultiSourceLoan.Loan)._loanId (src/lib/loans/MultiSourceLoan.sol#437) is not in mixedCase
Parameter MultiSourceLoan.liquidateLoan(uint256,IMultiSourceLoan.Loan)._loan (src/lib/loans/MultiSourceLoan.sol#437) is not in mixedCase
Parameter MultiSourceLoan.loanLiquidated(uint256,IMultiSourceLoan.Loan)._loanId (src/lib/loans/MultiSourceLoan.sol#456) is not in mixedCase
Parameter MultiSourceLoan.loanLiquidated(uint256,IMultiSourceLoan.Loan)._loan (src/lib/loans/MultiSourceLoan.sol#456) is not in mixedCase
Parameter MultiSourceLoan.delegate(uint256,IMultiSourceLoan.Loan,address,bytes32,bool)._loanId (src/lib/loans/MultiSourceLoan.sol#468) is not in mixedCase
Parameter MultiSourceLoan.delegate(uint256,IMultiSourceLoan.Loan,address,bytes32,bool)._delegate (src/lib/loans/MultiSourceLoan.sol#468) is not in mixedCase
Parameter MultiSourceLoan.delegate(uint256,IMultiSourceLoan.Loan,address,bytes32,bool)._rights (src/lib/loans/MultiSourceLoan.sol#468) is not in mixedCase
Parameter MultiSourceLoan.delegate(uint256,IMultiSourceLoan.Loan,address,bytes32,bool)._value (src/lib/loans/MultiSourceLoan.sol#468) is not in mixedCase
Parameter MultiSourceLoan.revokeDelegate(address,address,uint256)._delegate (src/lib/loans/MultiSourceLoan.sol#483) is not in mixedCase
Parameter MultiSourceLoan.revokeDelegate(address,address,uint256)._collection (src/lib/loans/MultiSourceLoan.sol#483) is not in mixedCase
Parameter MultiSourceLoan.revokeDelegate(address,address,uint256)._tokenId (src/lib/loans/MultiSourceLoan.sol#483) is not in mixedCase
Parameter MultiSourceLoan.setDelegateRegistry(address)._newDelegateRegistry (src/lib/loans/MultiSourceLoan.sol#494) is not in mixedCase
Parameter MultiSourceLoan.setMinLockPeriod(uint256).__minLockPeriod (src/lib/loans/MultiSourceLoan.sol#506) is not in mixedCase
Parameter MultiSourceLoan.getLoanHash(uint256)._loanId (src/lib/loans/MultiSourceLoan.sol#513) is not in mixedCase
Parameter MultiSourceLoan.getMinTranchePrincipal(uint256)._loanPrincipal (src/lib/loans/MultiSourceLoan.sol#517) is not in mixedCase
Parameter MultiSourceLoan.executeFlashAction(uint256,IMultiSourceLoan.Loan,address,bytes)._loanId (src/lib/loans/MultiSourceLoan.sol#522) is not in mixedCase
Parameter MultiSourceLoan.executeFlashAction(uint256,IMultiSourceLoan.Loan,address,bytes)._loan (src/lib/loans/MultiSourceLoan.sol#522) is not in mixedCase
Parameter MultiSourceLoan.executeFlashAction(uint256,IMultiSourceLoan.Loan,address,bytes)._target (src/lib/loans/MultiSourceLoan.sol#522) is not in mixedCase
Parameter MultiSourceLoan.executeFlashAction(uint256,IMultiSourceLoan.Loan,address,bytes)._data (src/lib/loans/MultiSourceLoan.sol#522) is not in mixedCase
Parameter MultiSourceLoan.setFlashActionContract(address)._newFlashActionContract (src/lib/loans/MultiSourceLoan.sol#548) is not in mixedCase
Parameter WithLoanManagers.addLoanManager(address)._loanManager (src/lib/loans/WithLoanManagers.sol#14) is not in mixedCase
Parameter WithLoanManagers.removeLoanManager(address)._loanManager (src/lib/loans/WithLoanManagers.sol#20) is not in mixedCase
Parameter WithLoanManagers.isLoanManager(address)._loanManager (src/lib/loans/WithLoanManagers.sol#26) is not in mixedCase
Parameter AaveUsdcBaseInterestAllocator.reallocate(uint256,uint256,bool)._currentIdle (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#63) is not in mixedCase
Parameter AaveUsdcBaseInterestAllocator.reallocate(uint256,uint256,bool)._targetIdle (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#63) is not in mixedCase
Parameter FeeManager.setPendingFees(IFeeManager.Fees).__fees (src/lib/pools/FeeManager.sol#40) is not in mixedCase
Parameter FeeManager.confirmFees(IFeeManager.Fees).__fees (src/lib/pools/FeeManager.sol#48) is not in mixedCase
Parameter FeeManager.processFees(uint256,uint256)._principal (src/lib/pools/FeeManager.sol#73) is not in mixedCase
Parameter FeeManager.processFees(uint256,uint256)._interest (src/lib/pools/FeeManager.sol#73) is not in mixedCase
Parameter LidoEthBaseInterestAllocator.setMaxSlippage(uint256)._maxSlippage (src/lib/pools/LidoEthBaseInterestAllocator.sol#68) is not in mixedCase
Parameter LidoEthBaseInterestAllocator.reallocate(uint256,uint256,bool)._currentIdle (src/lib/pools/LidoEthBaseInterestAllocator.sol#114) is not in mixedCase
Parameter LidoEthBaseInterestAllocator.reallocate(uint256,uint256,bool)._targetIdle (src/lib/pools/LidoEthBaseInterestAllocator.sol#114) is not in mixedCase
Parameter LidoEthBaseInterestAllocator.reallocate(uint256,uint256,bool)._force (src/lib/pools/LidoEthBaseInterestAllocator.sol#114) is not in mixedCase
Parameter Pool.setOptimalIdleRange(IPool.OptimalIdleRange)._optimalIdleRange (src/lib/pools/Pool.sol#184) is not in mixedCase
Parameter Pool.setBaseInterestAllocator(address)._newBaseInterestAllocator (src/lib/pools/Pool.sol#192) is not in mixedCase
Parameter Pool.confirmBaseInterestAllocator(address)._newBaseInterestAllocator (src/lib/pools/Pool.sol#202) is not in mixedCase
Parameter Pool.setReallocationBonus(uint256)._newReallocationBonus (src/lib/pools/Pool.sol#224) is not in mixedCase
Parameter Pool.afterCallerAdded(address)._caller (src/lib/pools/Pool.sol#234) is not in mixedCase
Parameter Pool.getDeployedQueue(uint256)._idx (src/lib/pools/Pool.sol#250) is not in mixedCase
Parameter Pool.getOutstandingValuesForQueue(uint256)._idx (src/lib/pools/Pool.sol#257) is not in mixedCase
Parameter Pool.getAccountingValuesForQueue(uint256)._idx (src/lib/pools/Pool.sol#269) is not in mixedCase
Parameter Pool.validateOffer(bytes,uint256)._offer (src/lib/pools/Pool.sol#392) is not in mixedCase
Parameter Pool.validateOffer(bytes,uint256)._protocolFee (src/lib/pools/Pool.sol#392) is not in mixedCase
Parameter Pool.loanRepayment(uint256,uint256,uint256,uint256,uint256,uint256)._loanId (src/lib/pools/Pool.sol#433) is not in mixedCase
Parameter Pool.loanRepayment(uint256,uint256,uint256,uint256,uint256,uint256)._principalAmount (src/lib/pools/Pool.sol#434) is not in mixedCase
Parameter Pool.loanRepayment(uint256,uint256,uint256,uint256,uint256,uint256)._apr (src/lib/pools/Pool.sol#435) is not in mixedCase
Parameter Pool.loanRepayment(uint256,uint256,uint256,uint256,uint256,uint256)._protocolFee (src/lib/pools/Pool.sol#437) is not in mixedCase
Parameter Pool.loanRepayment(uint256,uint256,uint256,uint256,uint256,uint256)._startTime (src/lib/pools/Pool.sol#438) is not in mixedCase
Parameter Pool.loanLiquidation(uint256,uint256,uint256,uint256,uint256,uint256,uint256)._loanId (src/lib/pools/Pool.sol#450) is not in mixedCase
Parameter Pool.loanLiquidation(uint256,uint256,uint256,uint256,uint256,uint256,uint256)._principalAmount (src/lib/pools/Pool.sol#451) is not in mixedCase
Parameter Pool.loanLiquidation(uint256,uint256,uint256,uint256,uint256,uint256,uint256)._apr (src/lib/pools/Pool.sol#452) is not in mixedCase
Parameter Pool.loanLiquidation(uint256,uint256,uint256,uint256,uint256,uint256,uint256)._protocolFee (src/lib/pools/Pool.sol#454) is not in mixedCase
Parameter Pool.loanLiquidation(uint256,uint256,uint256,uint256,uint256,uint256,uint256)._received (src/lib/pools/Pool.sol#455) is not in mixedCase
Parameter Pool.loanLiquidation(uint256,uint256,uint256,uint256,uint256,uint256,uint256)._startTime (src/lib/pools/Pool.sol#456) is not in mixedCase
Variable Pool._MAX_BONUS (src/lib/pools/Pool.sol#50) is not in mixedCase
Parameter PoolOfferHandler.setTerms(PoolOfferHandler.TermsKey[],PoolOfferHandler.Terms[])._termKeys (src/lib/pools/PoolOfferHandler.sol#80) is not in mixedCase
Parameter PoolOfferHandler.setTerms(PoolOfferHandler.TermsKey[],PoolOfferHandler.Terms[]).__terms (src/lib/pools/PoolOfferHandler.sol#80) is not in mixedCase
Parameter PoolOfferHandler.confirmTerms(PoolOfferHandler.TermsKey[],PoolOfferHandler.Terms[])._termKeys (src/lib/pools/PoolOfferHandler.sol#100) is not in mixedCase
Parameter PoolOfferHandler.confirmTerms(PoolOfferHandler.TermsKey[],PoolOfferHandler.Terms[]).__terms (src/lib/pools/PoolOfferHandler.sol#100) is not in mixedCase
Parameter PoolOfferHandler.getAprPremium(address,uint256,uint256,uint256)._collection (src/lib/pools/PoolOfferHandler.sol#130) is not in mixedCase
Parameter PoolOfferHandler.getAprPremium(address,uint256,uint256,uint256)._duration (src/lib/pools/PoolOfferHandler.sol#131) is not in mixedCase
Parameter PoolOfferHandler.getAprPremium(address,uint256,uint256,uint256)._maxSeniorRepayment (src/lib/pools/PoolOfferHandler.sol#132) is not in mixedCase
Parameter PoolOfferHandler.getAprPremium(address,uint256,uint256,uint256)._principalAmount (src/lib/pools/PoolOfferHandler.sol#133) is not in mixedCase
Parameter PoolOfferHandler.getPendingAprPremium(address,uint256,uint256,uint256)._collection (src/lib/pools/PoolOfferHandler.sol#145) is not in mixedCase
Parameter PoolOfferHandler.getPendingAprPremium(address,uint256,uint256,uint256)._duration (src/lib/pools/PoolOfferHandler.sol#146) is not in mixedCase
Parameter PoolOfferHandler.getPendingAprPremium(address,uint256,uint256,uint256)._maxSeniorRepayment (src/lib/pools/PoolOfferHandler.sol#147) is not in mixedCase
Parameter PoolOfferHandler.getPendingAprPremium(address,uint256,uint256,uint256)._principalAmount (src/lib/pools/PoolOfferHandler.sol#148) is not in mixedCase
Parameter PoolOfferHandler.validateOffer(uint256,bytes)._baseRate (src/lib/pools/PoolOfferHandler.sol#154) is not in mixedCase
Parameter PoolOfferHandler.validateOffer(uint256,bytes)._offer (src/lib/pools/PoolOfferHandler.sol#154) is not in mixedCase
Variable PoolOfferHandler.NEW_TERMS_WAITING_TIME (src/lib/pools/PoolOfferHandler.sol#40) is not in mixedCase
Parameter WithdrawalQueue.mint(address,uint256)._to (src/lib/pools/WithdrawalQueue.sol#61) is not in mixedCase
Parameter WithdrawalQueue.mint(address,uint256)._shares (src/lib/pools/WithdrawalQueue.sol#61) is not in mixedCase
Parameter WithdrawalQueue.tokenURI(uint256)._id (src/lib/pools/WithdrawalQueue.sol#75) is not in mixedCase
Parameter WithdrawalQueue.withdraw(address,uint256)._to (src/lib/pools/WithdrawalQueue.sol#84) is not in mixedCase
Parameter WithdrawalQueue.withdraw(address,uint256)._tokenId (src/lib/pools/WithdrawalQueue.sol#84) is not in mixedCase
Parameter WithdrawalQueue.getAvailable(uint256)._tokenId (src/lib/pools/WithdrawalQueue.sol#111) is not in mixedCase
Parameter WithdrawalQueue.lockWithdrawals(uint256,uint256)._tokenId (src/lib/pools/WithdrawalQueue.sol#118) is not in mixedCase
Parameter WithdrawalQueue.lockWithdrawals(uint256,uint256)._time (src/lib/pools/WithdrawalQueue.sol#118) is not in mixedCase
Parameter BytesLib.slice(bytes,uint256,uint256)._bytes (src/lib/utils/BytesLib.sol#12) is not in mixedCase
Parameter BytesLib.slice(bytes,uint256,uint256)._start (src/lib/utils/BytesLib.sol#12) is not in mixedCase
Parameter BytesLib.slice(bytes,uint256,uint256)._length (src/lib/utils/BytesLib.sol#12) is not in mixedCase
Parameter BytesLib.toAddress(bytes,uint256)._bytes (src/lib/utils/BytesLib.sol#72) is not in mixedCase
Parameter BytesLib.toAddress(bytes,uint256)._start (src/lib/utils/BytesLib.sol#72) is not in mixedCase
Parameter BytesLib.toUint24(bytes,uint256)._bytes (src/lib/utils/BytesLib.sol#84) is not in mixedCase
Parameter BytesLib.toUint24(bytes,uint256)._start (src/lib/utils/BytesLib.sol#84) is not in mixedCase
Parameter Hash.hash(IMultiSourceLoan.LoanOffer)._loanOffer (src/lib/utils/Hash.sol#39) is not in mixedCase
Parameter Hash.hash(IMultiSourceLoan.ExecutionData)._executionData (src/lib/utils/Hash.sol#83) is not in mixedCase
Parameter Hash.hash(IMultiSourceLoan.SignableRepaymentData)._repaymentData (src/lib/utils/Hash.sol#106) is not in mixedCase
Parameter Hash.hash(IMultiSourceLoan.Loan)._loan (src/lib/utils/Hash.sol#117) is not in mixedCase
Parameter Hash.hash(IMultiSourceLoan.RenegotiationOffer)._refinanceOffer (src/lib/utils/Hash.sol#140) is not in mixedCase
Parameter Hash.hash(IAuctionLoanLiquidator.Auction)._auction (src/lib/utils/Hash.sol#164) is not in mixedCase
Parameter Interest.getInterest(IMultiSourceLoan.LoanOffer)._loanOffer (src/lib/utils/Interest.sol#15) is not in mixedCase
Parameter Interest.getInterest(uint256,uint256,uint256)._amount (src/lib/utils/Interest.sol#19) is not in mixedCase
Parameter Interest.getInterest(uint256,uint256,uint256)._aprBps (src/lib/utils/Interest.sol#19) is not in mixedCase
Parameter Interest.getInterest(uint256,uint256,uint256)._duration (src/lib/utils/Interest.sol#19) is not in mixedCase
Parameter Interest.getTotalOwed(IMultiSourceLoan.Loan,uint256)._loan (src/lib/utils/Interest.sol#23) is not in mixedCase
Parameter Interest.getTotalOwed(IMultiSourceLoan.Loan,uint256)._timestamp (src/lib/utils/Interest.sol#23) is not in mixedCase
Parameter TwoStepOwned.requestTransferOwner(address)._newOwner (src/lib/utils/TwoStepOwned.sol#26) is not in mixedCase
Variable TwoStepOwned.MIN_WAIT_TIME (src/lib/utils/TwoStepOwned.sol#14) is not in mixedCase
Parameter ValidatorHelpers.validateTokenIdPackedList(uint256,uint64,bytes)._tokenId (src/lib/utils/ValidatorHelpers.sol#15) is not in mixedCase
Parameter ValidatorHelpers.validateTokenIdPackedList(uint256,uint64,bytes)._bytesPerTokenId (src/lib/utils/ValidatorHelpers.sol#15) is not in mixedCase
Parameter ValidatorHelpers.validateTokenIdPackedList(uint256,uint64,bytes)._tokenIdList (src/lib/utils/ValidatorHelpers.sol#15) is not in mixedCase
Parameter ValidatorHelpers.validateNFTBitVector(uint256,bytes)._tokenId (src/lib/utils/ValidatorHelpers.sol#72) is not in mixedCase
Parameter ValidatorHelpers.validateNFTBitVector(uint256,bytes)._bitVector (src/lib/utils/ValidatorHelpers.sol#72) is not in mixedCase
Parameter WithProtocolFee.updateProtocolFee(WithProtocolFee.ProtocolFee)._newProtocolFee (src/lib/utils/WithProtocolFee.sol#60) is not in mixedCase
Parameter NftBitVectorValidator.validateOffer(IMultiSourceLoan.LoanOffer,uint256,bytes)._tokenId (src/lib/validators/NftBitVectorValidator.sol#10) is not in mixedCase
Parameter NftBitVectorValidator.validateOffer(IMultiSourceLoan.LoanOffer,uint256,bytes)._validatorData (src/lib/validators/NftBitVectorValidator.sol#10) is not in mixedCase
Parameter NftPackedListValidator.validateOffer(IMultiSourceLoan.LoanOffer,uint256,bytes)._tokenId (src/lib/validators/NftPackedListValidator.sol#12) is not in mixedCase
Parameter NftPackedListValidator.validateOffer(IMultiSourceLoan.LoanOffer,uint256,bytes)._validatorData (src/lib/validators/NftPackedListValidator.sol#12) is not in mixedCase
Parameter RangeValidator.validateOffer(IMultiSourceLoan.LoanOffer,uint256,bytes)._tokenId (src/lib/validators/RangeValidator.sol#9) is not in mixedCase
Parameter RangeValidator.validateOffer(IMultiSourceLoan.LoanOffer,uint256,bytes)._validatorData (src/lib/validators/RangeValidator.sol#9) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
INFO:Detectors:
Variable LiquidationDistributor.distribute(uint256,IMultiSourceLoan.Loan).thisTranche_scope_1 (src/lib/LiquidationDistributor.sol#50) is too similar to LiquidationDistributor.distribute(uint256,IMultiSourceLoan.Loan).thisTranche_scope_3 (src/lib/LiquidationDistributor.sol#64)
Variable MultiSourceLoan.mergeTranches(uint256,IMultiSourceLoan.Loan,uint256,uint256)._maxTranche (src/lib/loans/MultiSourceLoan.sol#389) is too similar to MultiSourceLoan.constructor(address,WithProtocolFee.ProtocolFee,address,address,uint256,uint256,address,address,address,uint256).maxTranches (src/lib/loans/MultiSourceLoan.sol#97)
Variable MultiSourceLoan._mergeTranches(uint256,IMultiSourceLoan.Loan,uint256,uint256)._maxTranche (src/lib/loans/MultiSourceLoan.sol#1092) is too similar to MultiSourceLoan.constructor(address,WithProtocolFee.ProtocolFee,address,address,uint256,uint256,address,address,address,uint256).maxTranches (src/lib/loans/MultiSourceLoan.sol#97)
Variable IMultiSourceLoan.mergeTranches(uint256,IMultiSourceLoan.Loan,uint256,uint256)._maxTranche (src/interfaces/loans/IMultiSourceLoan.sol#209) is too similar to MultiSourceLoan.constructor(address,WithProtocolFee.ProtocolFee,address,address,uint256,uint256,address,address,address,uint256).maxTranches (src/lib/loans/MultiSourceLoan.sol#97)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-too-similar
INFO:Detectors:
FixedPointMathLib.sqrt(uint256) (lib/solmate/src/utils/FixedPointMathLib.sol#164-227) uses literals with too many digits:
	- ! y_sqrt_asm_0 < 0x10000000000000000000000000000000000 (lib/solmate/src/utils/FixedPointMathLib.sol#176-179)
FixedPointMathLib.sqrt(uint256) (lib/solmate/src/utils/FixedPointMathLib.sol#164-227) uses literals with too many digits:
	- ! y_sqrt_asm_0 < 0x1000000000000000000 (lib/solmate/src/utils/FixedPointMathLib.sol#180-183)
FixedPointMathLib.sqrt(uint256) (lib/solmate/src/utils/FixedPointMathLib.sol#164-227) uses literals with too many digits:
	- ! y_sqrt_asm_0 < 0x10000000000 (lib/solmate/src/utils/FixedPointMathLib.sol#184-187)
FixedPointMathLib.sqrt(uint256) (lib/solmate/src/utils/FixedPointMathLib.sol#164-227) uses literals with too many digits:
	- ! y_sqrt_asm_0 < 0x1000000 (lib/solmate/src/utils/FixedPointMathLib.sol#188-191)
SafeTransferLib.safeTransferFrom(ERC20,address,address,uint256) (lib/solmate/src/utils/SafeTransferLib.sol#31-63) uses literals with too many digits:
	- mstore(uint256,uint256)(freeMemoryPointer_safeTransferFrom_asm_0,0x23b872dd00000000000000000000000000000000000000000000000000000000) (lib/solmate/src/utils/SafeTransferLib.sol#45)
SafeTransferLib.safeTransfer(ERC20,address,uint256) (lib/solmate/src/utils/SafeTransferLib.sol#65-95) uses literals with too many digits:
	- mstore(uint256,uint256)(freeMemoryPointer_safeTransfer_asm_0,0xa9059cbb00000000000000000000000000000000000000000000000000000000) (lib/solmate/src/utils/SafeTransferLib.sol#78)
SafeTransferLib.safeApprove(ERC20,address,uint256) (lib/solmate/src/utils/SafeTransferLib.sol#97-127) uses literals with too many digits:
	- mstore(uint256,uint256)(freeMemoryPointer_safeApprove_asm_0,0x095ea7b300000000000000000000000000000000000000000000000000000000) (lib/solmate/src/utils/SafeTransferLib.sol#110)
BytesLib.toAddress(bytes,uint256) (src/lib/utils/BytesLib.sol#72-82) uses literals with too many digits:
	- tempAddress = mload(uint256)(_bytes + 0x20 + _start) / 0x1000000000000000000000000 (src/lib/utils/BytesLib.sol#78)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
INFO:Detectors:
AaveUsdcBaseInterestAllocator._PRINCIPAL_PRECISION (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#22) is never used in AaveUsdcBaseInterestAllocator (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#17-105)
AaveUsdcBaseInterestAllocator._SECONDS_PER_YEAR (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#23) is never used in AaveUsdcBaseInterestAllocator (src/lib/pools/AaveUsdcBaseInterestAllocator.sol#17-105)
LidoEthBaseInterestAllocator._PRINCIPAL_PRECISION (src/lib/pools/LidoEthBaseInterestAllocator.sol#29) is never used in LidoEthBaseInterestAllocator (src/lib/pools/LidoEthBaseInterestAllocator.sol#17-173)
PoolOfferHandler._BPS (src/lib/pools/PoolOfferHandler.sol#36) is never used in PoolOfferHandler (src/lib/pools/PoolOfferHandler.sol#20-170)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable
INFO:Detectors:
Pool._MAX_BONUS (src/lib/pools/Pool.sol#50) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
INFO:Detectors:
TwoStepOwned.MIN_WAIT_TIME (src/lib/utils/TwoStepOwned.sol#14) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
INFO:Slither:. analyzed (85 contracts with 94 detectors), 927 result(s) found
